!
! Motif
!
! Copyright (c) 1987-2012, The Open Group. All rights reserved.
!
! These libraries and programs are free software; you can
! redistribute them and/or modify them under the terms of the GNU
! Lesser General Public License as published by the Free Software
! Foundation; either version 2 of the License, or (at your option)
! any later version.
!
! These libraries and programs are distributed in the hope that
! they will be useful, but WITHOUT ANY WARRANTY; without even the
! implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
! PURPOSE. See the GNU Lesser General Public License for more
! details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with these librararies and programs; if not, write
! to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
! Floor, Boston, MA 02110-1301 USA
!
!
! HISTORY
!
!   $XConsortium: Names.uil /main/7 1995/07/13 20:40:46 drk $
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive

  include file "Names.msg";

  procedure
          exit_test();
	  Report_Callback(string);

  value
	  wheat			     : color('wheat');
	  navy			     : color('navy');

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmBulletinBoard {

              arguments {
                  XmNx = 0;
                  XmNy = 0;
              };
    	      controls {
                  XmBulletinBoardDialog 	explanation;
                  XmForm    			Form;
    	      };
  	  };

  value
        sky_blue: color ('sky blue');
	coral: color ('coral');
        black: color ('black');
	variable: font('variable');

  object
        Form :  XmForm {
            arguments {
                XmNwidth =  150;
                XmNheight =  350;
                XmNborderWidth =  5;
                XmNdefaultPosition =  false;
                XmNrubberPositioning =  true;
            };
	    controls {
		XmPushButton	RPush;
		LPush:	XmPushButton {
		     arguments {
			XmNleftAttachment = XmATTACH_FORM;
			XmNbottomAttachment = XmATTACH_FORM;
			XmNtopAttachment = XmATTACH_FORM;
		     };
		     callbacks {
			XmNactivateCallback = procedure Report_Callback
					('activateCallback LeftPushButton');
		     };
		};
		TForm: XmForm {
		    arguments {
			      XmNtopAttachment = XmATTACH_FORM;
			      XmNrightAttachment = XmATTACH_WIDGET;
			      XmNrightWidget = RPush;
			      XmNleftAttachment = XmATTACH_WIDGET;
			      XmNleftWidget = LPush;
			      XmNheight = 200;
			      XmNbackground = coral;
			      XmNforeground = black;
			      XmNborderWidth =  5;
			      XmNdefaultPosition =  false;
			      XmNrubberPositioning =  true;
			      };
		    controls  {
			      XmPushButton	Tpush;
			      Tlabel : XmLabel {
				    arguments {
					  XmNfontList = variable;
					  XmNleftAttachment = XmATTACH_FORM;
					  XmNrightAttachment = XmATTACH_FORM;
					  XmNtopAttachment = XmATTACH_WIDGET;
					  XmNtopWidget = Tpush;
					  XmNlabelString = compound_string("Label");
					  };
				    };
			      Ttext : XmText {
				    arguments {
					  XmNleftAttachment = XmATTACH_FORM;
					  XmNrightAttachment = XmATTACH_FORM;
					  XmNbottomAttachment = XmATTACH_FORM;
					  XmNtopAttachment = XmATTACH_WIDGET;
					  XmNtopWidget = Tlabel;
					  XmNresizeWidth = true;
					  XmNwordWrap = true;
					  XmNeditMode = XmMULTI_LINE_EDIT;
					  XmNeditable = true;
					  XmNvalue = "With a little text on the side";
				      };

				};
			  };
		     };
		BPush:	XmPushButton {
		     arguments {
			XmNbottomAttachment = XmATTACH_FORM;
			XmNrightAttachment = XmATTACH_FORM;
			XmNleftAttachment = XmATTACH_FORM;
		     };
		     callbacks {
			XmNactivateCallback = procedure Report_Callback
					('activateCallback BottomPushButton');
		     };
		};
	    };
        };


object
	RPush:	XmPushButton {
	     arguments {
		XmNrightAttachment = XmATTACH_FORM;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNtopAttachment = XmATTACH_FORM;
	     };
	     callbacks {
		XmNactivateCallback = procedure Report_Callback
				('activateCallback RightPushButton');
	     };
	};


object
	Tpush :	XmPushButton {
			arguments {
				  XmNleftAttachment = XmATTACH_FORM;
				  XmNtopAttachment = XmATTACH_FORM;
				  XmNrightAttachment = XmATTACH_FORM;
				  XmNbackground = wheat;
				  XmNforeground = navy;
			 	  XmNlabelString = compound_string("Try Me");
				  };
			callbacks {
			    XmNactivateCallback = procedure Report_Callback
					    ('activateCallback TopPushButton');
			    };
		};


object
	explanation : XmBulletinBoardDialog {
			arguments {
				  XmNx = 500;
				  XmNy  = 0;
				  XmNdefaultPosition = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  };
			controls  {
				  XmPushButton	pushb1;
      				  XmLabel	        label1;
				  XmText		text1;
			    	  };
                 };


object
	pushb1 :	XmPushButton {
			arguments {
				  XmNx = 0;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
			 	  XmNlabelString = compound_string("Exit");
				  };
			callbacks {
				  XmNarmCallback = procedure exit_test();
				  };
		};

object
	label1 : XmLabel {
			arguments {
				  XmNx = 60;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNlabelString = compound_string("Explanation of Widget Displayed");
				  };
		};


object
	text1 : XmText {
			arguments {
				  XmNx = 0;
				  XmNy = 40;
				  XmNheight = 350;
				  XmNwidth = 300;
				  XmNwordWrap = true;
				  XmNeditMode = XmMULTI_LINE_EDIT;
				  XmNeditable = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNvalue = message;
				  };

		};
end module;
