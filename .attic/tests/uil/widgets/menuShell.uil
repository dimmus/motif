! Motif
!
! Copyright (c) 1987-2012, The Open Group. All rights reserved.
!
! These libraries and programs are free software; you can
! redistribute them and/or modify them under the terms of the GNU
! Lesser General Public License as published by the Free Software
! Foundation; either version 2 of the License, or (at your option)
! any later version.
!
! These libraries and programs are distributed in the hope that
! they will be useful, but WITHOUT ANY WARRANTY; without even the
! implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
! PURPOSE. See the GNU Lesser General Public License for more
! details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with these librararies and programs; if not, write
! to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
! Floor, Boston, MA 02110-1301 USA
!
! HISTORY
!
!   $XConsortium: menuShell.uil /main/4 1995/07/13 20:48:44 drk $
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive

  include file "menuShell.msg";

  procedure
          exit_test();
	  Report_Callback(string);
	  Report_Callback_widget(any);

  value
	  wheat			     : color('wheat');
	  navy			     : color('navy');

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmBulletinBoard {

              arguments {
                  XmNx = 0;
                  XmNy = 0;
              };
    	      controls {
                  XmBulletinBoardDialog 	explanation;
		  XmLabel			label2;
		  unmanaged XmMenuShell		Menu_Shell;
   	      };
  	  };

  value
        black: color ('black');
	variable: font('variable');

  object
	Menu_Shell: XmMenuShell {
	    arguments {
		XmNwidth = 5;
		XmNheight = 5;
		XmNallowShellResize = true;
		XmNoverrideRedirect = true;
	    };
	    controls {
		unmanaged XmRowColumn	Menu;
	    };
  };

  object
        Menu :  XmRowColumn {
            arguments {
		XmNrowColumnType = XmMENU_POPUP;
		XmNmenuAccelerator = "Ctrl<Key>P";
            };
	    controls {
	  	XmPushButton push_button1;
	  	XmPushButton push_button2;
	  	XmPushButton push_button3;
	  	XmPushButton push_button4;
	    };
        };

object
	label2 :  XmLabel {
		arguments {
		  	XmNlabelString = compound_string
				('<Ctrl>P in Label for a MenuShell Popup');
			XmNfontList = variable;
		};
	};

object
	push_button1 :	XmPushButton {
		arguments {
			XmNlabelString = compound_string("PushButton1");
			XmNfontList = variable;
		};
		callbacks {
			XmNactivateCallback = procedure Report_Callback_widget
				(XmPushButton push_button2);
		};
	};

object
	push_button2 : 	XmPushButton {
		arguments {
			XmNlabelString = compound_string("PushButton2");
			XmNfontList = variable;
		};
		callbacks {
			XmNactivateCallback = procedure Report_Callback_widget
				(XmPushButton push_button3);
		};
	};

object
	push_button3 : 	XmPushButton {
		arguments {
			XmNlabelString = compound_string("PushButton3");
			XmNfontList = variable;
		};
		callbacks {
			XmNactivateCallback = procedure Report_Callback_widget
				(XmPushButton push_button4);
		};
	};

object
	push_button4 : 	XmPushButton {
		arguments {
			XmNlabelString = compound_string("PushButton4");
			XmNfontList = variable;
		};
		callbacks {
			XmNactivateCallback = procedure Report_Callback_widget
				(XmPushButton push_button1);
		};
	};

object
	explanation : XmBulletinBoardDialog {
			arguments {
				  XmNx = 500;
				  XmNy  = 0;
				  XmNdefaultPosition = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  };
			controls  {
				  XmPushButton	pushb1;
      				  XmLabel	        label1;
				  XmText		text1;
			    	  };
                 };

object
	pushb1 :	XmPushButton {
			arguments {
				  XmNx = 0;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
			 	  XmNlabelString = compound_string("Exit");
				  };
			callbacks {
				  XmNarmCallback = procedure exit_test();
				  };
		};

object
	label1 : XmLabel {
			arguments {
				  XmNx = 60;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNlabelString = compound_string("Explanation of Widget Displayed");
				  };
		};


object
	text1 : XmText {
			arguments {
				  XmNx = 0;
				  XmNy = 40;
				  XmNheight = 400;
				  XmNwidth = 300;
				  XmNwordWrap = true;
				  XmNeditMode = XmMULTI_LINE_EDIT;
				  XmNeditable = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNvalue = message;
				  };

		};
end module;
