!
! Motif
!
! Copyright (c) 1987-2012, The Open Group. All rights reserved.
!
! These libraries and programs are free software; you can
! redistribute them and/or modify them under the terms of the GNU
! Lesser General Public License as published by the Free Software
! Foundation; either version 2 of the License, or (at your option)
! any later version.
!
! These libraries and programs are distributed in the hope that
! they will be useful, but WITHOUT ANY WARRANTY; without even the
! implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
! PURPOSE. See the GNU Lesser General Public License for more
! details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with these librararies and programs; if not, write
! to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
! Floor, Boston, MA 02110-1301 USA
!
!
! HISTORY
!
!   $XConsortium: popupMenu.uil /main/8 1995/07/13 20:50:09 drk $
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive

  include file "popupMenu.msg";

  procedure
          exit_test();
	  Report_Callback(string);

  value
	  wheat			     : color('wheat');
	  navy			     : color('navy');

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmBulletinBoard {

              arguments {
                  XmNx = 0;
                  XmNy = 0;
              };
    	      controls {
                  XmBulletinBoardDialog 	explanation;
		  XmLabel			label2;
		  unmanaged XmPopupMenu		Popup_Menu;
   	      };
  	  };

  value
        sky_blue: color ('sky blue');
        black: color ('black');
	forest_green : color('forestgreen');
	bold_font: font('8x13bold');

  object
        Popup_Menu :  XmPopupMenu {
            arguments {
		!XmNwhichButton = 1;
		XmNmenuPost = "<Btn1Down>";
		XmNmenuAccelerator = "Ctrl<Key>Z";
            };
	    controls {
	  	XmPushButton push_button1;
	  	XmPushButton push_button2;
		XmSeparator {};
	  	XmPushButton push_button3;
	  	XmPushButton push_button4;
	    };
        };

! /**************************************************************************/
object
	label2 :  XmLabel {
		arguments {
		  	XmNlabelString = compound_string
				('<Ctrl>Z in Label for a Popup Menu');
			XmNfontList = bold_font;
		};
	};

object
	push_button1 :	XmPushButton {
		arguments {
			XmNbackground = forest_green;
			XmNaccelerator = "Ctrl<Key>a";
			XmNacceleratorText = compound_string("<Ctrl>A");
			XmNfontList = bold_font;
		};
		callbacks {
			XmNactivateCallback = procedure Report_Callback
				('activateCallback push_button1');
		};
	};

object
	push_button2 : 	XmPushButton {
		arguments {
			XmNbackground = forest_green;
			XmNaccelerator = "Ctrl<Key>b";
			XmNacceleratorText = compound_string("<Ctrl>B");
			XmNfontList = bold_font;
		};
		callbacks {
			XmNactivateCallback = procedure Report_Callback
				('activateCallback push_button2');
		};
	};

object
	push_button3 : 	XmPushButton {
		arguments {
			XmNbackground = forest_green;
			XmNaccelerator = "Ctrl<Key>c";
			XmNacceleratorText = compound_string("<Ctrl>C");
			XmNfontList = bold_font;
		};
		callbacks {
			XmNactivateCallback = procedure Report_Callback
				('activateCallback push_button3');
		};
	};

object
	push_button4 : 	XmPushButton {
		arguments {
			XmNbackground = forest_green;
			XmNaccelerator = "Ctrl<Key>d";
			XmNacceleratorText = compound_string("<Ctrl>D");
			XmNfontList = bold_font;
		};
		callbacks {
			XmNactivateCallback = procedure Report_Callback
				('activateCallback push_button4');
		};
	};
! /***************************************************************************/

object
	explanation : XmBulletinBoardDialog {
			arguments {
				  XmNx = 500;
				  XmNy  = 0;
				  XmNdefaultPosition = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  };
			controls  {
				  XmPushButton	pushb1;
      				  XmLabel	        label1;
				  XmText		text1;
			    	  };
                 };

object
	pushb1 :	XmPushButton {
			arguments {
				  XmNx = 0;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
			 	  XmNlabelString = compound_string("Exit");
				  };
			callbacks {
				  XmNarmCallback = procedure exit_test();
				  };
		};

object
	label1 : XmLabel {
			arguments {
				  XmNx = 60;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNlabelString = compound_string("Explanation of Widget Displayed");
				  };
		};


object
	text1 : XmText {
			arguments {
				  XmNx = 0;
				  XmNy = 40;
				  XmNheight = 320;
				  XmNwidth = 300;
				  XmNwordWrap = true;
				  XmNeditMode = XmMULTI_LINE_EDIT;
				  XmNeditable = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNvalue = message;
				  };

		};
end module;
