!
! Motif
!
! Copyright (c) 1987-2012, The Open Group. All rights reserved.
!
! These libraries and programs are free software; you can
! redistribute them and/or modify them under the terms of the GNU
! Lesser General Public License as published by the Free Software
! Foundation; either version 2 of the License, or (at your option)
! any later version.
!
! These libraries and programs are distributed in the hope that
! they will be useful, but WITHOUT ANY WARRANTY; without even the
! implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
! PURPOSE. See the GNU Lesser General Public License for more
! details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with these librararies and programs; if not, write
! to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
! Floor, Boston, MA 02110-1301 USA
!
!
! HISTORY
!
!   $XConsortium: pulldown.uil /main/8 1995/07/13 20:50:49 drk $
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive

  include file "pulldown.msg";

  procedure
          exit_test();
	  Report_Callback(string);

  value
	  wheat			     : color('wheat');
	  navy			     : color('navy');
	  forest_green		     : color('forestgreen');
	  black			     : color('black');

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmBulletinBoard {

              arguments {
                  XmNx = 0;
                  XmNy = 0;
              };
    	      controls {
                  XmBulletinBoardDialog 	explanation;
		  XmMenuBar 			menu_bar;
  	      };
  	  };

  object
	menu_bar :	XmMenuBar {
	     controls {
                  XmCascadeButton Cascade_Button;
	     };
	};


  object
        Cascade_Button :  XmCascadeButton {
            arguments {
                XmNlabelString =  compound_string ("Pulldown Menu");
            };
	    controls {
		XmPulldownMenu pdm1;
            };
        };


object
	pdm1 :	XmPulldownMenu {
		arguments {
			XmNmarginWidth = 10;
			XmNmarginHeight = 10;
			XmNspacing = 5;
			XmNentryAlignment = XmALIGNMENT_CENTER;
			XmNforeground = black;
			XmNbackground = forest_green;
			XmNshadowThickness = 15;
			};
		controls {
			XmPushButton p_btn1;
			XmToggleButton tb_1;
			XmSeparator gadget {};
			XmPushButton p_btn2;
		};
		callbacks {
			XmNmapCallback =  procedure Report_Callback
					('mapCallback');
			XmNunmapCallback =  procedure Report_Callback
					('unmapCallback');
		};
	};


! /***************************************************************************/
object
	p_btn1 : XmPushButton {
		arguments {
			XmNlabelString = compound_string
					("Push_Button1");
		};
		callbacks {
			XmNarmCallback = procedure Report_Callback
					('armCallback - Push_Button1');
		};
	};

object
	p_btn2 : XmPushButton {
		arguments {
			XmNlabelString = compound_string
					("Push_Button2");
		};
		callbacks {
			XmNarmCallback = procedure Report_Callback
					('armCallback - PushButton2');
		};
	};


object
	tb_1 : XmToggleButton {
		arguments {
			XmNlabelString = compound_string
					("Toggle_Button");
		};
		callbacks {
			XmNvalueChangedCallback = procedure Report_Callback
					('valueChangedCallback Toggle_button');
		};
	};
/****************************************************************************/

object
	explanation : XmBulletinBoardDialog {
			arguments {
				  XmNx = 500;
				  XmNy  = 0;
				  XmNdefaultPosition = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  };
			controls  {
				  XmPushButton	pushb1;
      				  XmLabel	        label1;
				  XmText		text1;
			    	  };
                 };

object
	pushb1 :	XmPushButton {
			arguments {
				  XmNx = 0;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
			 	  XmNlabelString = compound_string("Exit");
				  };
			callbacks {
				  XmNarmCallback = procedure exit_test();
				  };
		};

object
	label1 : XmLabel {
			arguments {
				  XmNx = 60;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNlabelString = compound_string("Explanation of Widget Displayed");
				  };
		};


object
	text1 : XmText {
			arguments {
				  XmNx = 0;
				  XmNy = 40;
				  XmNheight = 300;
				  XmNwidth = 300;
				  XmNwordWrap = true;
				  XmNeditMode = XmMULTI_LINE_EDIT;
				  XmNeditable = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNvalue = message;
				  };

		};
end module;
