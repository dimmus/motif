!
! Motif
!
! Copyright (c) 1987-2012, The Open Group. All rights reserved.
!
! These libraries and programs are free software; you can
! redistribute them and/or modify them under the terms of the GNU
! Lesser General Public License as published by the Free Software
! Foundation; either version 2 of the License, or (at your option)
! any later version.
!
! These libraries and programs are distributed in the hope that
! they will be useful, but WITHOUT ANY WARRANTY; without even the
! implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
! PURPOSE. See the GNU Lesser General Public License for more
! details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with these librararies and programs; if not, write
! to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
! Floor, Boston, MA 02110-1301 USA
!
!
! HISTORY
!
!   $XConsortium: Values.uil /main/4 1995/07/13 20:35:35 drk $
module Values

	version = 'v1.0'
	names = case_sensitive

!
!For identifier/value test
!

!/*      This Test will produce failures. The reason for this is that    */
!/*      indentifiers and values pass different types. Identifiers       */
!/*      pass Pointer to an integer and values pass the integer value    */
!/*      to MrmFetchLiteral. Pir 2089.                                   */

procedure  create_proc_iden(integer);
procedure  create_proc_value(integer);

identifier CBdata0;

value   CBdata1		: exported 1;

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmBulletinBoard {

              arguments {
                  XmNx = 0;
                  XmNy = 0;
              };
    	      controls {
                  XmLabel    			Label;
		  XmLabel			Label2;
    	      };
  	  };
  object
        Label :  XmLabel {
		arguments {
	                XmNlabelString =  compound_string ("Label");
		          };
                callbacks {
		MrmNcreateCallback = procedure create_proc_iden(CBdata0);
	    };
        };

  object
        Label2 :  XmLabel {
		arguments {
	                XmNlabelString =  compound_string ("Label");
		          };
                callbacks {
		MrmNcreateCallback = procedure create_proc_value(CBdata1);
	    };
        };
end module;
