!
! Motif
!
! Copyright (c) 1987-2012, The Open Group. All rights reserved.
!
! These libraries and programs are free software; you can
! redistribute them and/or modify them under the terms of the GNU
! Lesser General Public License as published by the Free Software
! Foundation; either version 2 of the License, or (at your option)
! any later version.
!
! These libraries and programs are distributed in the hope that
! they will be useful, but WITHOUT ANY WARRANTY; without even the
! implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
! PURPOSE. See the GNU Lesser General Public License for more
! details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with these librararies and programs; if not, write
! to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
! Floor, Boston, MA 02110-1301 USA
!
!
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive

  procedure
          exit_test();
	  Report_Callback(string);

  value
	  wheat			     : color('wheat');
	  navy			     : color('navy');

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmBulletinBoard {

              arguments {
                  XmNx = 0;
                  XmNy = 0;
              };
    	      controls {

                  DtMenuButton			Menu_Button;
		  unmanaged XmPopupMenu		Popup_menu;
    	      };
  	  };

  value
        green: color ('green');
	forest_green:  color('forest_green');
        MediumBlue: color ('MediumBlue');
        black: color ('black');
        navy_blue: color ('navy blue');
	red: color('red');
	bold_font: font('8x13bold');

  object
        Menu_Button :  DtMenuButton {
            arguments {
!                XmNborderWidth =  50;
                XmNbackground =  green;
		XmNwidth = 200;
		XmNheight = 100;
                XmNborderColor =  MediumBlue;
!                XmNshadowThickness =  5;
                XmNbottomShadowColor =  navy_blue;
!		XmNmarginWidth = 10;
!		XmNmarginHeight = 10;
            };
        };

  object
	Popup_menu :  XmPopupMenu {
       	    arguments {
		!XmNwhichButton = 1;
                XmNmenuPost = "<Btn1Down>";
                XmNmenuAccelerator = "Ctrl<Key>Z";
            };
            controls {
                XmPushButton push_button1;
                XmPushButton push_button2;
                XmSeparator {};
                XmPushButton push_button3;
                XmPushButton push_button4;
            };
        };

    object
        push_button1 :  XmPushButton {
                arguments {
                        XmNbackground = forest_green;
                        XmNaccelerator = "Ctrl<Key>a";
                        XmNacceleratorText = compound_string("<Ctrl>A");
                        XmNfontList = bold_font;
                };
                callbacks {
                        XmNactivateCallback = procedure Report_Callback
                                ('activateCallback push_button1');
                };
        };

object
        push_button2 :  XmPushButton {
                arguments {
                        XmNbackground = forest_green;
                        XmNaccelerator = "Ctrl<Key>b";
                        XmNacceleratorText = compound_string("<Ctrl>B");
                        XmNfontList = bold_font;
                };
                callbacks {
                        XmNactivateCallback = procedure Report_Callback
                                ('activateCallback push_button2');
                };
        };

object
        push_button3 :  XmPushButton {
                arguments {
                        XmNbackground = forest_green;
                        XmNaccelerator = "Ctrl<Key>c";
                        XmNacceleratorText = compound_string("<Ctrl>C");
                        XmNfontList = bold_font;
                };
                callbacks {
                        XmNactivateCallback = procedure Report_Callback
                                ('activateCallback push_button3');
                };
        };

object
        push_button4 :  XmPushButton {
                arguments {
                        XmNbackground = forest_green;
                        XmNaccelerator = "Ctrl<Key>d";
                        XmNacceleratorText = compound_string("<Ctrl>D");
                        XmNfontList = bold_font;
                };
                callbacks {
                        XmNactivateCallback = procedure Report_Callback
                                ('activateCallback push_button4');
                };
        };



end module;
