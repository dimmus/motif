/* 
 * Motif
 *
 * Copyright (c) 1987-2012, The Open Group. All rights reserved.
 *
 * These libraries and programs are free software; you can
 * redistribute them and/or modify them under the terms of the GNU
 * Lesser General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * These libraries and programs are distributed in the hope that
 * they will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with these librararies and programs; if not, write
 * to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
 * Floor, Boston, MA 02110-1301 USA
*/ 
/* 
 * HISTORY
*/ 
/*
static char rcsid[] = "$XConsortium: TextField4.dat /main/6 1995/07/13 19:36:04 drk $"
*/
@) The client window should have two TextField widgets and
one Text widget.
The first TextField has XmNresizeWidth set to False.  The second has
it set to True.  The Text widget also has it set to True.
/* test case for PIR 2914 */
#) Type "all the king's horses and all the king's men" into the first 
TextField widget.  For each character typed that exceeds the width
of the TextField, the text should shift to the left one character 
to keep the newly typed character in view.
#) Type the same string into the second TextField widget.  The behavior should
be identical.  In particular, the text should not jump more than one
character at a time to the left as the new text in entered on the right.
#) Type the same string again into the third Text widget.  The behavior should
also be identical.
/* end of test case for PIR 2914 */
C)
#) Resize the shell window to the right by about an inch to give
the two text fields space
to grow.
#) Click MB1 after the last character in the first TextField widget.
#) Type "couldn't put humpty".  The widget should not change size, and
the text should scroll as it did before.
#) Click MB1 at the end of the second TextField widget and type the same
string there.
@) This widget should grow to accomodate the new characters until its
size reaches the new size of the shell window.  At that point, the text
should scroll as more new characters are entered.
#) Click MB1 at the end of the third Text widget.  Confirm that is
behaves the same as the second TextField widget did.
C)
/* test case for PIR 2898 */
#) Click MB1 at the end of the string in the second TextField widget.
#) Type osfBackspaces until the string is slightly shorter than the
width of the first TextField widget.
Confirm that one character at a time is
deleted and the window shrinks by one character each time.
#) Click MB1 at the end of the string in the Text widget and type
the same number of osfBackspaces.
#) Confirm that this widget behaves the same as the TextField widget did.
/* end of test case for PIR 2898 */
E)
