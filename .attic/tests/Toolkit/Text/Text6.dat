/* 
 * Motif
 *
 * Copyright (c) 1987-2012, The Open Group. All rights reserved.
 *
 * These libraries and programs are free software; you can
 * redistribute them and/or modify them under the terms of the GNU
 * Lesser General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * These libraries and programs are distributed in the hope that
 * they will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with these librararies and programs; if not, write
 * to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
 * Floor, Boston, MA 02110-1301 USA
*/ 
/* 
 * HISTORY
*/ 
/*
static char rcsid[] = "$XConsortium: Text6.dat /main/6 1995/07/13 19:30:09 drk $"
*/
/* test case for PIR 3677
 *   PIR 3677 closed.  The shell/paned window should end up the size of
 *   the two default text widgets, not 400x300.
 *
 * @) The test window shows two text widgets in a Paned Window.
 * Note that the Shell window size is 400W x 300H, and
 * the top Text widget is one row high while the second fills the
 * rest of the Shell window size. 
 * end of test case for PIR 3677 */
@) The test window shows two text widgets in a Paned Window.
Note that although the Shell window size was set to  400W x 300H,
the final hierarchy will only be sized to accomodate the two default
Text widgets (1 row x 20 columns each).
#) Give focus to the test client window. The focus should be at the start of the text in Text1.
#) Press and drag MB2 over the text in Text1.
#) Press the Tab key twice. Focus should be in Text2.
#) Type the word 'The' and a space. The string should read \"The Sample Text2\".
#) After you press continue, the test will verify the contents of Text2 and print out an error message if CR xxxx is still present.
C)
#) Check the results of the previous panel for an error message.
#) If this test failed, the results for the remainder of this test will most likely be corrupted. You may wish to rerun the test and skip the MB2 Drag on Panel 1.
C)
#) Move the pointer into the top text widget and click MB1.
   The insertion cursor should appear.
#) Press the return key. The text should change to
   "The <Return> Key was pressed." and a message indicating the
   callback reason should appear in the stdout window.
C)
#) Move the pointer into the bottom text widget and click MB1.
   The insertion cursor should appear.
#) Press the return key. A newline is inserted but the message should not
   change. 
C)
#) Put the pointer into the bottom text widget and press <Ctrl> r.  The text
   in the bottom widget should change to "Changed the string.".
   (Note that the bottom text widget will not get a focus highlight or
   respond to any other keystrokes.  The only tranlation it currently
   recognizes is <Ctrl> r.)
C)
#) Click MB1 in the top text widget.
/* test case for PIR 1772, PIR 1058 */
#) Type some text.
   For each character typed, messages indicating the callback reasons
   should appear in the stdout window.
   You should see "XmCR_MODIFYING_TEXT_VALUE" before
   "XmCR_VALUE_CHANGED".
#) Select text elsewhere in the text widget.
   Click MB2 to paste the text.
   Messages indicating the callback reasons should appear in the
   stdout window.
   You should see "XmCR_MODIFYING_TEXT_VALUE" before
   "XmCR_VALUE_CHANGED".
/* end of test case for PIR 1772, PIR 1058 */

C)

/*  Begin CR 6141 */
#) Click MB1 on the pushbutton labelled \"Set String\" to add text into the text widget.
#) Move the insertion cursor to position 3, which is immediately after the
word \"New\".
#) Click MB1 on the pushbutton labelled \"Insert\" which will insert new
text at position 3.
#) Verify that the insertion cursor moved to the end of the newly
inserted text.
/* End CR 6141 */

C)
E)
