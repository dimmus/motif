/* 
 * Motif
 *
 * Copyright (c) 1987-2012, The Open Group. All rights reserved.
 *
 * These libraries and programs are free software; you can
 * redistribute them and/or modify them under the terms of the GNU
 * Lesser General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * These libraries and programs are distributed in the hope that
 * they will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with these librararies and programs; if not, write
 * to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
 * Floor, Boston, MA 02110-1301 USA
*/ 
/* 
 * HISTORY
*/ 
/*
static char rcsid[] = "$XConsortium: List9.dat /main/6 1995/07/13 18:22:11 drk $"
*/
#) Testing XmList functions XmListGetKbdItemPos(), XmListSetKbdItemPos(),
   XmListPosSelected() and XmListPosToBounds().
#) Move the position scale so that it reads 0.
#) Select XmListPosSelected() from the Functions List. 
#) Press the Call Function PushButton. The Label beneath the Functions
   list should state that Position 0 is not selected.
#) Select Item10 from the Action List.
#) Move the position scale so that it reads 10
#) Press the Call Function PushButton. The Label beneath the Functions
   list should state that Position 10 is selected.
#) Move the position scale so that it reads 16.
#) Press the Call Function PushButton. The Label beneath the Functions
   list should state that Position 16 is not selected.
C)
#) Select XmListPosToBounds() from the Functions List. 
#) Move the position scale so that it reads 0.
#) Press the Call Function PushButton. The Label beneath the Functions
   list should state that Position 0 is not visible.
#) Move the position scale so that it reads 5
#) Press the Call Function PushButton. The Label beneath the Functions
   list should list the bounding box for Position 5.
#) Move the position scale so that it reads 0.
#) Scroll the Action List so that Item15 is visible.
#) Press the Call Function PushButton. The Label beneath the Functions
   list should list the bounding box for Position 0 (Item15).
C)
#) Select XmListSetKbdItemPos() from the Functions List.
#) Move the position scale so that it reads 8.
#) Press the Call Function PushButton. Item8 should be seleted and if
   you tab to the List, Item8 will have the highlight.
#) Select XmListGetKbdItemPos() from the Functions List.
#) Press the Call Function PushButton. The Label beneath the Functions
   list should state that Keyboard Position is 8.
#) Try setting the keyboard position via XmListSetKbdItemPos()
   and retreiving the value of the selected position via 
   XmListGetKbdItemPos() with other positions.
#) Try setting the keyboard position via XmListSetKbdItemPos()
   to 0 and making sure that the last item in the list is highlighted.
#) Try changing the Selection Policy (via the RadioBox) and testing
   interactions in different modes.
#) Move in Extended Selection mode, and try interactions in and out
   of Add Mode (can Toggle with List AddMode toggle button or Shift F8
   in the Action List)
C)
@) This is the test for OSF CR 5676
#) Stay in Extended Selection mode.
#) Select items 4 through 8 by clicking on item 4 and dragging to item 8
#) Then toggle select by pressing Ctrl-Btn1 on item 3 and dragging to item 10,
   but don't release the mouse button yet. Items 3, 9 and 10 have now been 
   toggled to on.
#) Without releasing the mouse on item 10, drag back to item 3 and then release.
   Items 9 and 10 should have correctly been reverted back to an unselected 
   state. But items 4 through 8 should remain selected. If not, the
   test for OSF CR 5676 fails.
@) End of the test for OSF CR 5676 
C)
@) This is the test for OSF CR 5676
#) Stay in Extended Selection mode.
#) Select items 4 through 8 by clicking on item 4 and dragging to item 8
#) Then toggle select by pressing Ctrl-Btn1 on item 3 and dragging to item 10,
   but don't release the mouse button yet. Items 3, 9 and 10 have now been 
   toggled to on.
#) Without releasing the mouse on item 10, drag back to item 3 and then release.
   Items 9 and 10 should have correctly been reverted back to an unselected 
   state. But items 4 through 8 should remain selected. If not, the
   test for OSF CR 5676 fails.
@) End of the test for OSF CR 5676 
C)
#) All items should be deleted. 
@) Test case for OSF CR 5886
#) Toggle the List AddMode toggle button so that it is off.
#) If the test is still running, CR 5886 is fixed.
@) End of test for OSF CR 5886
#) Select XmListGetKbdItemPos() from the Functions List.
#) Press the Call Function PushButton. The Label beneath the Functions
   list should state that Keyboard Position is 0.
E)


#) This is a 1.2 test only.  Please exit.
E)
