!
! Motif
!
! Copyright (c) 1987-2012, The Open Group. All rights reserved.
!
! These libraries and programs are free software; you can
! redistribute them and/or modify them under the terms of the GNU
! Lesser General Public License as published by the Free Software
! Foundation; either version 2 of the License, or (at your option)
! any later version.
!
! These libraries and programs are distributed in the hope that
! they will be useful, but WITHOUT ANY WARRANTY; without even the
! implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
! PURPOSE. See the GNU Lesser General Public License for more
! details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with these librararies and programs; if not, write
! to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
! Floor, Boston, MA 02110-1301 USA
!
!
! HISTORY
!
!   $XConsortium: radioBox.uil /main/8 1995/07/13 20:51:40 drk $
!******************************************************************************
module Test
        version = 'v1.0'
        names = case_sensitive

  include file "radioBox.msg";

  procedure
          exit_test();
	  Report_Callback(string);

  value
	  wheat			     : color('wheat');
	  navy			     : color('navy');

  object                                  ! The main window widget.
          S_MAIN_WIDGET : XmBulletinBoard {

              arguments {
                  XmNx = 0;
                  XmNy = 0;
              };
    	      controls {
                  XmBulletinBoardDialog 	explanation;
                  XmRadioBox	       	        Radio_Box;
              };
  	  };



  value
        sky_blue: color ('sky blue');
        black: color ('black');
	cadet_blue: color('cadetblue');

  object
        Radio_Box :  XmRadioBox {
            arguments {
                XmNwidth =  200;
                XmNheight =  200;
                XmNborderWidth =  4;
		XmNbackground = cadet_blue;
		XmNmarginWidth = 10;
		XmNmarginHeight = 10;
		XmNnumColumns = 2;
		XmNpacking = XmPACK_COLUMN;
		XmNspacing = 10;
		XmNentryAlignment = XmALIGNMENT_CENTER;
            };
            callbacks {
		XmNentryCallback = procedure Report_Callback
				('entryCallback');
            };
	    controls {
		XmToggleButton ToggleButton1;
		XmToggleButton ToggleButtonGadget2;
		XmToggleButton ToggleButtonGadget3;
		XmToggleButton ToggleButtonGadget4;
		XmToggleButton ToggleButtonGadget5;
	   };
        };

!/****************************************************************************/
object
	ToggleButton1 :	XmToggleButton {
	   arguments {
		XmNbackground = cadet_blue;
	   };
	   callbacks {
		XmNvalueChangedCallback = procedure Report_Callback
				('valueChangedCallback - ToggleButton1');
	   };
	};

object
	ToggleButtonGadget2 :	XmToggleButton gadget {
	   callbacks {
		XmNvalueChangedCallback = procedure Report_Callback
				('valueChangedCallback - ToggleButton2');
	   };
	};

object
	ToggleButtonGadget3 :	XmToggleButton gadget {
	   callbacks {
		XmNvalueChangedCallback = procedure Report_Callback
				('valueChangedCallback - ToggleButton3');
	   };
	};

object
	ToggleButtonGadget4 :	XmToggleButton gadget {
	   callbacks {
		XmNvalueChangedCallback = procedure Report_Callback
				('valueChangedCallback - ToggleButtonGadget4');
	   };
	};

object
	ToggleButtonGadget5 :	XmToggleButton gadget {
	   callbacks {
		XmNvalueChangedCallback = procedure Report_Callback
				('valueChangedCallback - ToggleButtonGadget5');
	   };
	};
!/****************************************************************************/

object
	explanation : XmBulletinBoardDialog {
			arguments {
				  XmNx = 500;
				  XmNy  = 0;
				  XmNdefaultPosition = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  };
			controls  {
				  XmPushButton	pushb1;
      				  XmLabel	        label1;
				  XmText		text1;
			    	  };
                 };

object
	pushb1 :	XmPushButton {
			arguments {
				  XmNx = 0;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
			 	  XmNlabelString = compound_string("Exit");
				  };
			callbacks {
				  XmNarmCallback = procedure exit_test();
				  };
		};

object
	label1 : XmLabel {
			arguments {
				  XmNx = 60;
				  XmNy = 0;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNlabelString = compound_string("Explanation of Widget Displayed");
				  };
		};


object
	text1 : XmText {
			arguments {
				  XmNx = 0;
				  XmNy = 40;
				  XmNheight = 350;
				  XmNwidth = 300;
				  XmNwordWrap = true;
				  XmNeditMode = XmMULTI_LINE_EDIT;
				  XmNeditable = false;
				  XmNbackground = wheat;
				  XmNforeground = navy;
				  XmNvalue = message;
				  };

		};
end module;
