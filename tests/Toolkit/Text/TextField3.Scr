# $XConsortium: TextField3.scr /main/5 1995/07/17 20:42:57 drk $
#
# Motif
#
# Copyright (c) 1987-2012, The Open Group. All rights reserved.
#
# These libraries and programs are free software; you can
# redistribute them and/or modify them under the terms of the GNU
# Lesser General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# These libraries and programs are distributed in the hope that
# they will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with these librararies and programs; if not, write
# to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
# Floor, Boston, MA 02110-1301 USA
#
#
# HISTORY
#

#  @) A Text Field widget with the string 'Sample Text' will appear in
#     the test window. The text is red on a white background.
#  #) Move the pointer into the Text Field and press the return key.
#     It should have no effect.
LocatePointer Text1 RTextChar Max
ClickMB Btn1
ClickKey KReturn
CompareVisual Text1

#  C)
Continue

#  #) Move the pointer into the Text Field and press ANY key. No matter
#     what key was pressed, a 'A' will appear.
LocatePointer Text1 RTextChar Max
ClickMB Btn1
ClickKey Kf

#  #) Press another key. This time a 'B' will appear in the text widget.
ClickKey Ky
CompareVisual Text1

#  #) Repeat this cycle and you will print out the entire alphabet.
InputString "this string has how many"
CompareVisual Text1

#  C)
Continue

#  #) Move the pointer into the Text Field, and again press Return.
#     The text will change to the name of your server vendor.
LocatePointer Text1
ClickMB Btn1
ClickKey KReturn
CompareVisual Text1

#  C)
Continue

#  #) Type some text into the text field.  Press return.  The text
#     will be replaced with a long string that overflows the display.
LocatePointer Text1 RTextChar Max
ClickMB Btn1
InputString "new text"
ClickKey KReturn

#  #) Confirm that the destination and insertion cursors are at
#     the beginning of the text
#     and that the text is on-screen.
CompareVisual Text1

#  #) Press return again. The text will be replaced with a short string.
#     Confirm that the location and insertion cursors are at the beginning
#     of the text
#     and that the text is on-screen.
ClickKey KReturn
CompareVisual Text1


Continue

# #) The maximum length for the text has been set to 40 characters and
# the XmNaudibleWarning resource for the Shell has been set to XmBELL.
# Set the insertion cursor at the end of the sentence and try entering
# new text. Verify that no new text is entered and that the terminal beeps
# when attempting to enter the new text.
LocatePointer Text1 RTextChar Max
ClickMB Btn1
InputString "new text"
CompareVisual Text1

Continue

# #) The maximum length for the text is still set at 40 characters, however,
# the XmNaudibleWarning resource has been changed to XmNONE. Set the insertion
# cursor at the end of the sentence and try to enter new text again.
# Verify that no new text is entered and that the terminal does not beep.
LocatePointer Text1 RTextChar Max
ClickMB Btn1
InputString "new text"
CompareVisual Text1

Continue

# #) The sentence \"The cursor should be here.  If not, an error occurred.\"
# should be displayed in the widget.  The insertion position has been set to
# position immediately after the first sentence.
#
# #) Verify that the insertion cursor is located after
# \"The cursor should be here.\".
CompareVisual Text1

Continue
