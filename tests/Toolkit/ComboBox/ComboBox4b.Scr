# $XConsortium: ComboBox4b.scr /main/4 1995/07/17 20:09:03 drk $
#
# Motif
#
# Copyright (c) 1987-2012, The Open Group. All rights reserved.
#
# These libraries and programs are free software; you can
# redistribute them and/or modify them under the terms of the GNU
# Lesser General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# These libraries and programs are distributed in the hope that
# they will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with these librararies and programs; if not, write
# to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
# Floor, Boston, MA 02110-1301 USA
# 
# 
# HISTORY


#  A ComboBox should of the type DROP_DOWN_COMBO_BOX should appear.
#  With a DROP_DOWN_COMBO_BOX, the List child is initially hidden.
#  A downward pointing arrow is be displayed which is used for
#  posting the List.
#  Click MB1 on the downward pointing arrow.  A List with 20 visible
#  items should appear.
#  The spacing between list items should be 5.
#  The height and width of the margin between the list border and the
#  items should be 2.
#  Click on the second item in the list. That item should be displayed in
#  the text entry field.
#  The List should unpost.


CompareVisual ComboBox
LocatePointer ComboBox RComboBoxDropDownButton
ClickMB Btn1
LocatePointer List RListItem 1
ClickMB Btn1

CompareVisual ComboBox
Continue


#  The cursor of the TextField widget should be at position 5.
#  Try typing into the TextField widget.
#  The margin height and margin width should both be 20. (space between the
#  4 sides of the window and the text).
#  As you keep typing, the TextField widget should grow horizontally to
#  accomodate the text.

LocatePointer Text
ClickMB Btn1
InputString "This Is A Very Long String"
CompareVisual ComboBox
Continue

#  A new item, "ExtraItem" should have been added to the end of the List.
#  Click MB1 on the downward-pointing arrow to post the List.
#  Scroll down to the end of the List to verify that this is the
#  last item.
#  Click MB1 on the last item. Verify that the Text Field is updated
#  with "ExtraItem".
#  The List should unpost.

LocatePointer ComboBox RComboBoxDropDownButton
ClickMB Btn1
LocatePointer List RVertScrollBarDownArrow 
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
ClickMB Btn1
CompareVisual ComboBox
LocatePointer List RListItem 19 
ClickMB Btn1
CompareVisual ComboBox

Continue


#  This panel tests the XmComboBoxUpdate function.
#  The selected item should change to be "Item1", and this is
#  the item that should be displayed in the edit box.  "Item1" has been
#  selected using XmListSelectionItem, and XmComboBoxUpdate should
#  bring the ComboBox in sync with the new selected item.
#  Click MB1 on the downward-pointing arrow to post the List.
#  Scroll upwards in the List to verify that "Item1" is selected in the List.

CompareVisual ComboBox

LocatePointer ComboBox RComboBoxDropDownButton
ClickMB Btn1
CompareVisual ComboBox

Continue


Exit



