# $XConsortium: ToggleBtn1.scr /main/6 1995/07/17 20:07:35 drk $
# 
# Motif
#
# Copyright (c) 1987-2012, The Open Group. All rights reserved.
#
# These libraries and programs are free software; you can
# redistribute them and/or modify them under the terms of the GNU
# Lesser General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# These libraries and programs are distributed in the hope that
# they will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with these librararies and programs; if not, write
# to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
# Floor, Boston, MA 02110-1301 USA
# 
# 
# HISTORY
# 

# This is a simple test of toggle button behaviors. To toggle a 
#  toggle button, click anywhere on the label or on the indicator.  

# Click on Toggle1. The indicator should fill to show it is on.
#  Three callback messages appeared in the xterm window: Arm, Value Changed, 
#  and Disarm.  Toggle Button 1 uses a large font and its indicator is 
#  sized proportionally. 

# Press MB1 down on Toggle1, then move outside the window and release
#  the button.
#  You should get Arm and Disarm callback messages. The toggle indicator
#  will change when you press the button and should revert when you move
#  outside the window. 

# Move the pointer back over Toggle1, and use the space bar to toggle 
# the indicator. 

LocatePointer ToggleButton1
ClickMB Btn1
CompareVisual ToggleButton1
PressMB Btn1
LocatePointer ToggleButton1 Off
ReleaseMB Btn1
CompareVisual ToggleButton1
LocatePointer ToggleButton1
ClickKey KSpace
CompareVisual ToggleButton1
ClickKey KSpace
CompareVisual ToggleButton1
Continue

# Move the pointer over Toggle2. Toggle the toggle button using either 
#  the mouse or the keyboard, as you did with Toggle1. The indicator 
#  should not fill with a new color, but the top and bottom shadows 
#  should change 

# Leave this button ON before you continue
#  It should remain highlighted for the remainder of the test. 

LocatePointer ToggleButton2
ClickMB Btn1
CompareVisual ToggleButton2
Continue

# Toggle3 should show no indicator. Toggle it, and the indicator will appear. 

LocatePointer ToggleButton3
CompareVisual ToggleButton3
ClickMB Btn1
CompareVisual ToggleButton3
Continue

# Toggle4 should already appear ON. You can manipulate it normally. 
# Toggle5 contains a pixmap instead of a label. When you toggle the
#   toggle button, the pixmap will change. 

LocatePointer ToggleButton4
CompareVisual ToggleButton4
ClickMB Btn1
CompareVisual ToggleButton4
LocatePointer ToggleButton5
CompareVisual ToggleButton5
ClickMB Btn1
CompareVisual ToggleButton5
Continue

# Toggle6 has no indicator. When you toggle it, the shadows should change 
#  so that it appears depressed. Press again and it will revert. 

LocatePointer ToggleButton6
CompareVisual ToggleButton6
ClickMB Btn1
CompareVisual ToggleButton6
ClickMB Btn1
CompareVisual ToggleButton6
Continue

# Toggle5 should now be toggled to the ON position (smiley face). 

CompareVisual ToggleButton5
Continue

# Toggle5 should now be toggled to the OFF position (circles). 

CompareVisual ToggleButton5
Continue

# The background of ToggleButton5 will change to be a smile face
#  pixmap 

CompareVisual ToggleButton5
Continue

# The background of ToggleButton5 will change back to the default
#  background color. 

CompareVisual ToggleButton5
Continue
Exit
