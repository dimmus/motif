# $XConsortium: List5.scr /main/5 1995/07/17 20:21:56 drk $
# 
# Motif
#
# Copyright (c) 1987-2012, The Open Group. All rights reserved.
#
# These libraries and programs are free software; you can
# redistribute them and/or modify them under the terms of the GNU
# Lesser General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# These libraries and programs are distributed in the hope that
# they will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with these librararies and programs; if not, write
# to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
# Floor, Boston, MA 02110-1301 USA
# 
# 
# HISTORY
# 

# OSF/Motif: @(#)List5.scr	1.1  91/10/11

# Screen 1
# A List contained in a Bulletin Board should appear. The Font should be:
# -adobe-helvetica-medium-o-normal--18-180-75-75-p-98-iso8859-1

LocatePointer List1
CompareVisual List1

# C)

Continue

# Screen 2
# The Selection Policy should be Extended Select in Normal Mode

LocatePointer List1 RListItem 0
CompareVisual List1

# Move the mouse into the List and press the <Space Bar>. The Message
# \"ExtendedSelection Callback called\" should be printed in the term window.

ClickKey KSpace
CompareVisual List1

# Press the Down Arrow Key. The highlight and the selection highlight should
# now be on Item2. The same callback message should be printed in the term
# window. Item1 should be deselected.

ClickKey KDown
CompareVisual List1

# Press <Shift> <Space Bar>, the same callback message should be printed in
# the term window.

ClickKey <Shift> KSpace
CompareVisual List1

# Press <Shift> Down Arrow Key. Item3 should now be selected (along with
# Item2). The highlight should be on Item3, and the same callback message
# should be printed in the term window.

ClickKey <Shift> KDown
CompareVisual List1

# Press <Cntrl> <Shift> Down Arrow Key. Item4 should now be selected
# (along with Item2, and Item3). Extended Callback message should be
# printed in the term window.

ClickKey <Ctrl> <Shift> KDown
CompareVisual List1

# C)

Continue

# Screen 3
# Press <Cntrl> \"/\". All items in the list should be selected. The message
# \"ExtendedSelection Callback called\" should be printed in the term window.


LocatePointer List1 RListItem 0
ClickKey <Ctrl> KSlash
CompareVisual List1

# Press <Cntrl> \"\\\". All items in the list should be DeSelected except
# for Item4.

ClickKey <Ctrl> KBackSlash
CompareVisual List1

# Press <Return> in the List. The message \"DefaultAction Callback called\"
# should be printed in the term window.

ClickKey KReturn
CompareVisual List1

# Press KSelect twice very quickly. The message \"ExtendedSelection Callback
# called\" should be printed in the term window. No 
# \"DefaultAction Callback called\" message should appear.

ClickKey KSelect
CompareVisual List1

# Press the <Space Bar>. Item4 should stayed selected and the Extended
# Selection callback message should be printed in the term window.

ClickKey KSpace
CompareVisual List1

# Press and hold MB1 on Item4 and move the selection to Item10. Items 4
# through   10 should be selected. Before you let go of MB1 press
# KCancel. The selection of Item4 through 10 should be deleted 
# and Item4 should be the only item selected. Release MB1.

LocatePointer List1 RListItem 3
PressMB Btn1
LocatePointer List1 RListItem 9
ClickKey KCancel
ReleaseMB Btn1

# C)

Continue

# Screen 4
# The List should now have no Items selected. The hightlight should still
# be over Item4 but it should now be dashed lines instead of solid. This
# signifies that the List is now in Add Mode. SelectionPolicy is still
# EXTENDED_SELECT.

LocatePointer List1 RListItem 0
CompareVisual List1

# Press the <Space Bar>. Item4 should now be selected and the message
# \"ExtendedSelection Callback called\" should be printed in the term window.

ClickKey KSpace
CompareVisual List1

# Press the Down Arrow Key. The highlight should move to Item5, but Item5
# will NOT be selected.

ClickKey KDown
CompareVisual List1

# Move with the Down Arrow key till you get to Item10.

ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey KDown
CompareVisual List1

# Press <Shift> <Space Bar>. All Items between Item4 and Item10 will
# be seleted and the hightlight will remain on Item10. The Extended
# Callback message will be printed in the term window.

ClickKey <Shift> KSpace
CompareVisual List1

# Move the highlight with the UP Arrow key until you reach Item1. Press
# the <Space Bar>. Item1 should be selected along with the other items
# currently selected.  The Extended callback message should be printed.

ClickKey KUp
ClickKey KUp
ClickKey KUp
ClickKey KUp
ClickKey KUp
ClickKey KUp
ClickKey KUp
ClickKey KUp
ClickKey KUp
ClickKey KSpace
CompareVisual List1


# C)

Continue

# Screen 5
# Move the highlight with the Down Arrow key until you reach Item10. Press
# <Shift> Up Arrow. Item1 through Item10 should be selected and the
# Extended callback message should be printed in the term window. The
# highlight should be on Item9.

LocatePointer List1 RListItem 0
ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey KDown
ClickKey <Shift> KUp
CompareVisual List1

# Press <Cntrl> \"\\\". All items in the list should be DeSelected.

ClickKey <Ctrl> KBackSlash
CompareVisual List1

# Press <Cntrl> \"/\". All items in the list should be selected. The
# EXTENDED callback message will be printed in the term window.

ClickKey <Ctrl> KSlash
CompareVisual List1

# Press the <Return> key. The message \"DefaultAction Callback called\"
# should be printed in the term window. The selected items should not 
# change.

ClickKey KReturn
CompareVisual List1

# C)

Continue

# Press KHelp in the List. The message \"Help Callback called\" should be 
# printed in the term window.

LocatePointer List1 RListItem 0
ClickKey KHelp
CompareVisual List1

# C)

Continue

# A PushButton labeled CancelButton will appear to the right of the List.
# This is defined as the cancel button of the Bulletin Board.

# Click MB1 on item one.

# Press MB1 on the first List item. Drag two the thrid list item.
# Press KCancel.

LocatePointer List1 RListItem 0
ClickMB Btn1
PressMB Btn1
LocatePointer List1 RListItem 2
ClickKey KCancel

# The selection in the List should be canceled. The CancelButton should
# not activate. Release MB1

CompareVisual List1
ReleaseMB Btn1

# C)

Continue

# The PushButton should now be labeled \"Set Insensitive\".
# Click MB1 on the PushButton. The PushButton and the List should be set
# insensitive, there should be no highlight in the List.

LocatePointer CancelButton
ClickMB Btn1

CompareVisual List1

# C)

Continue

# The List should shift downward to (0, 250).

LocatePointer List1 RListItem 0
CompareVisual List1

# Double click on Item1. An Information Dialog should appear.  
# The Information dialog will be XmDIALOG_FULL_APPLICATION_MODAL.

ClickMB Btn1 2
CompareVisual List1

# Move the pointer the above the list. The list should not scroll. 

LocatePointer List1 Up
CompareVisual List1

# Move the pointer below the list. The list should not scroll.

LocatePointer List1 Down
CompareVisual List1

# Repeat two previous step a coulple of times.

LocatePointer List1 Up
LocatePointer List1 Down
LocatePointer List1 Up
LocatePointer List1 Down
CompareVisual List1

# Move the pointer to the Information Dialog and click on the OK
# button. The dialog should be unmanaged and pop down.

LocatePointer InfoDia1 ROkButton
ClickMB Btn1

# E)

Exit
