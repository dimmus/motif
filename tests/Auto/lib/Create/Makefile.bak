# Makefile generated by imake - do not edit!

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $TOG: Imake.tmpl /main/249 1997/10/13 15:28:56 kaleb $
#

all::

.SUFFIXES: .i

# $TOG: Imake.cf /main/30 1998/04/28 13:55:25 barstow $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $TOG: site.def /main/12 1997/07/02 17:52:18 samborn $

# ----------------------------------------------------------------------
# platform-specific configuration parameters - edit linux.cf to change

# platform:  $TOG: linux.cf /main/47 1998/04/17 11:32:51 mgreess $

# operating system:  Linux 6.14.0-27-generic x86_64 (6.14.0)
# libc:  (6.39.0)
# binutils:  (242)

# $TOG: lnxLib.rules /main/14 1998/03/16 11:15:30 mgreess $

# $XFree86: xc/config/cf/xfree86.cf,v 3.117 1996/10/19 15:12:31 dawes Exp $

# $TOG: xfree86.cf /main/38 1997/10/22 13:01:59 kaleb $

LINKKITDIR = $(USRLIBDIR)/Server
XF98LINKKITDIR = $(USRLIBDIR)/Server

       XF86SRC = $(SERVERSRC)/hw/xfree86
  XF86ACCELSRC = $(XF86SRC)/accel
    XF86COMSRC = $(XF86SRC)/common
 XF86CONFIGSRC = $(XF86COMSRC)
     XF86HWSRC = $(XF86SRC)/common_hw
     XF86OSSRC = $(XF86SRC)/os-support
  VGADRIVERSRC = $(XF86SRC)/vga256/drivers
VGA16DRIVERSRC = $(XF86SRC)/vga16/drivers
 VGA2DRIVERSRC = $(XF86SRC)/vga2/drivers
 MONODRIVERSRC = $(XF86SRC)/mono/drivers
   S3DRIVERSRC = $(XF86SRC)/accel/s3/drivers
  S3VDRIVERSRC = $(XF86SRC)/accel/s3_virge/drivers

           XF98SRC = $(SERVERSRC)/hw/xfree98
      XF98ACCELSRC = $(XF98SRC)/accel
        XF98COMSRC = $(XF98SRC)/common
     XF98CONFIGSRC = $(XF98COMSRC)
         XF98HWSRC = $(XF98SRC)/common_hw/generic
      XF98HWNECSRC = $(XF98SRC)/common_hw/nec
    XF98HWPWSKBSRC = $(XF98SRC)/common_hw/pwskb
     XF98HWPWLBSRC = $(XF98SRC)/common_hw/pwlb
         XF98OSSRC = $(XF98SRC)/os-support
  XF98VGADRIVERSRC = $(XF98SRC)/vga256/drivers
XF98VGA16DRIVERSRC = $(XF98SRC)/vga16/drivers
 XF98VGA2DRIVERSRC = $(XF98SRC)/vga2/drivers
 XF98MONODRIVERSRC = $(XF98SRC)/mono/drivers
XF98NECS3DRIVERSRC = $(XF98SRC)/accel/s3nec/drivers
XF98PWSKBDRIVERSRC = $(XF98SRC)/accel/s3pwskb/drivers
 XF98PWLBDRIVERSRC = $(XF98SRC)/accel/s3pwlb/drivers

        XFREE86DOCDIR = $(LIBDIR)/doc
      XFREE86PSDOCDIR = $(XFREE86DOCDIR)/PostScript
    XFREE86HTMLDOCDIR = $(XFREE86DOCDIR)/html
XFREE86JAPANESEDOCDIR = $(XFREE86DOCDIR)/Japanese

# $XConsortium: xf86.rules /main/9 1996/10/31 14:54:26 kaleb $
# $XFree86: xc/config/cf/xf86.rules,v 3.15 1996/09/24 13:48:46 dawes Exp $

# ----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $TOG: site.def /main/12 1997/07/02 17:52:18 samborn $

# ---------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $TOG: Imake.rules /main/227 1998/02/02 12:07:57 kaleb $

 _NULLCMD_ = @ echo -n

          PATHSEP = /
            SHELL = /bin/sh

              TOP = /media/dimmus/dev/x/xde-classic/xde-motif/tests/..
      CURRENT_DIR = .

            IMAKE = imake
           DEPEND = makedepend
        MKDIRHIER = mkdir -p
    EXPORTLISTGEN =
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend

          INCROOT = /usr/include
        USRLIBDIR = /usr/lib/x86_64-linux-gnu
         SHLIBDIR = /usr/lib/x86_64-linux-gnu
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = /usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)5
       MISCMANDIR = $(MANSOURCEPATH)$(MISCMANSUFFIX)

               AR = ar rcs
  BOOTSTRAPCFLAGS =
               CC = gcc
               AS = as

.SUFFIXES: .cc

              CXX = g++
          CXXFILT = c++filt
           CXXLIB =
    CXXDEBUGFLAGS = -O
CXXDEPENDINCLUDES =
 CXXEXTRA_DEFINES =
CXXEXTRA_INCLUDES =
   CXXSTD_DEFINES = -Dlinux -D__amd64__ -D_POSIX_C_SOURCE=199309L 				-D_POSIX_SOURCE 				-D_DEFAULT_SOURCE $(CXXPROJECT_DEFINES)
       CXXOPTIONS =
      CXXINCLUDES = $(INCLUDES) $(TOP_INCLUDES) $(CXXEXTRA_INCLUDES)
       CXXDEFINES = $(CXXINCLUDES) $(CXXSTD_DEFINES) $(THREADS_CXXDEFINES) $(CXXEXTRA_DEFINES) $(DEFINES)
         CXXFLAGS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(THREADS_CXXFLAGS) $(CXXDEFINES)

         COMPRESS = compress
          GZIPCMD = gzip
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = flex -l
           LEXLIB = -lfl
             YACC = yacc
           CCYACC = yacc
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
        MANSUFFIX = 1x
     LIBMANSUFFIX = 3x
    FILEMANSUFFIX = 5x
    MISCMANSUFFIX = 7

            TROFF = psroff
            NROFF = nroff
         MSMACROS = -ms
        MANMACROS = -man
              TBL = tbl
              EQN = eqn
             NEQN = neqn
              COL = col

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional -Dlinux -D__amd64__ -D_POSIX_C_SOURCE=199309L 				-D_POSIX_SOURCE 				-D_DEFAULT_SOURCE $(PROJECT_DEFINES)
      STD_DEFINES = -Dlinux -D__amd64__ -D_POSIX_C_SOURCE=199309L 				-D_POSIX_SOURCE 				-D_DEFAULT_SOURCE $(PROJECT_DEFINES)
 EXTRA_LOAD_FLAGS = -Wl,-rpath,$(USRLIBDIRPATH)
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS = -shared

         PICFLAGS = -fPIC

      CXXPICFLAGS = -fPIC

    PROTO_DEFINES = -DFUNCPROTO=15 -DNARROWPROTO

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4711
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4711

      PROJECTROOT = /usr

      CDEBUGFLAGS = -O
        CCOPTIONS = -ansi

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(USRLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIBS)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIBS)

           LDLIBS = $(LDPOSTLIBS) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = $(CC)

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = linux.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/X11.tmpl 			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) 			$(IRULESRC)/host.def $(EXTRA_ICONFIGFILES)

# $TOG: Motif.rules /main/8 1999/03/22 15:12:48 mgreess $

# $TOG: X11.rules /main/4 1997/04/30 15:23:24 kaleb $

# $TOG: Motif.tmpl /main/6 1999/05/19 17:00:05 mgreess $

WCHARDEFS=

LANGINFO_DEFS=

# ----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $TOG: X11.tmpl /main/308 1998/06/16 15:14:24 msr $

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

             XTOP = $(TOP)
           BINDIR = /usr/bin
     BUILDINCROOT = $(TOP)/exports
      BUILDINCDIR = $(BUILDINCROOT)/include
      BUILDINCTOP = ../..
      BUILDLIBDIR = $(TOP)/exports/lib
      BUILDLIBTOP = ../..
      BUILDBINDIR = $(TOP)/exports/bin
      BUILDBINTOP = ../..
    XBUILDINCROOT = $(XTOP)/exports
     XBUILDINCDIR = $(XBUILDINCROOT)/include/X11
     XBUILDINCTOP = ../../..
     XBUILDBINDIR = $(XBUILDINCROOT)/bin
           INCDIR = $(INCROOT)
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
   TOP_X_INCLUDES = -I$(XPROJECTROOT)/include

           VARDIR = /var/X11

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
           XSMDIR = $(LIBDIR)/xsm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(LIBDIR)/locale
        PEXAPIDIR = $(LIBDIR)/PEX
      LBXPROXYDIR = $(LIBDIR)/lbxproxy
  PROXYMANAGERDIR = $(LIBDIR)/proxymngr
        XPRINTDIR = $(LIBDIR)/xserver
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

              RGB = $(BINDIR)/rgb
            FONTC = $(BINDIR)/bdftopcf
        MKFONTDIR = $(BINDIR)/mkfontdir

       DOCUTILSRC = $(XTOP)/doc/util
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(XTOP)/lib
          FONTSRC = $(XTOP)/fonts
       INCLUDESRC = $(BUILDINCROOT)/include
      XINCLUDESRC = $(INCLUDESRC)/X11
        SERVERSRC = $(XTOP)/programs/Xserver
       CONTRIBSRC = $(XTOP)/../contrib
   UNSUPPORTEDSRC = $(XTOP)/unsupported
           DOCSRC = $(XTOP)/doc
           RGBSRC = $(XTOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(XTOP)/include/fonts
        EXTINCSRC = $(XTOP)/include/extensions
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)

     XPROJECTROOT = /usr

       XENVLIBDIR = $(XPROJECTROOT)/lib
   CLIENTENVSETUP = LD_LIBRARY_PATH=$(MOTIFENVLIBDIR):$(XENVLIBDIR)

# $TOG: lnxLib.tmpl /main/7 1998/03/20 14:26:41 mgreess $

          XLIBSRC = $(LIBSRC)/X11

SOXLIBREV = 6.1
DEPXONLYLIB =
XONLYLIB =  -lX11

LINTXONLY = $(LINTLIBDIR)/llib-lX11.ln

         XLIBONLY = $(XONLYLIB)

      XEXTLIBSRC = $(LIBSRC)/Xext

SOXEXTREV = 6.4
DEPEXTENSIONLIB =
EXTENSIONLIB =  -lXext

LINTEXTENSION = $(LINTLIBDIR)/llib-lXext.ln

LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)

         XAUTHSRC = $(LIBSRC)/Xau

DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
XAUTHLIB =  -lXau

LINTXAUTH = $(LINTLIBDIR)/llib-lXau.ln

      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
XDMCPLIB =  -lXdmcp

LINTXDMCP = $(LINTLIBDIR)/llib-lXdmcp.ln

           XMUSRC = $(LIBSRC)/Xmu

SOXMUREV = 6.0
DEPXMULIB =
XMULIB =  -lXmu

LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln

       OLDXLIBSRC = $(LIBSRC)/oldX

DEPOLDXLIB = $(USRLIBDIR)/liboldX.a
OLDXLIB =  -loldX

LINTOLDX = $(LINTLIBDIR)/llib-loldX.ln

         XPLIBSRC = $(LIBSRC)/Xp

SOXPREV = 6.2
DEPXPLIB =
XPLIB =  -lXp

LINTXP = $(LINTLIBDIR)/llib-lXp.ln

       TOOLKITSRC = $(LIBSRC)/Xt

SOXTREV = 6.0
DEPXTOOLONLYLIB =
XTOOLONLYLIB =  -lXt

LINTXTOOLONLY = $(LINTLIBDIR)/llib-lXt.ln

      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       XALIBSRC = $(LIBSRC)/Xa

SOXAREV = 1.0
DEPXALIB =
XALIB =  -lXa

LINTXA = $(LINTLIBDIR)/llib-lXa.ln

       AWIDGETSRC = $(LIBSRC)/Xaw

SOXAWREV = 6.1
DEPXAWLIB =
XAWLIB =  -lXaw

LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln

         XILIBSRC = $(LIBSRC)/Xi

SOXINPUTREV = 6.0
DEPXILIB =
XILIB =  -lXi

LINTXI = $(LINTLIBDIR)/llib-lXi.ln

      XTESTLIBSRC = $(LIBSRC)/Xtst

SOXTESTREV = 6.1
DEPXTESTLIB =
XTESTLIB =  -lXtst

LINTXTEST = $(LINTLIBDIR)/llib-lXtst.ln

        PEXLIBSRC = $(LIBSRC)/PEX5

SOPEXREV = 6.0
DEPPEXLIB =
PEXLIB =  -lPEX5

LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln

        XIELIBSRC = $(LIBSRC)/XIE

SOXIEREV = 6.0
DEPXIELIB =
XIELIB =  -lXIE

LINTXIE = $(LINTLIBDIR)/llib-lXIE.ln

      PHIGSLIBSRC = $(LIBSRC)/PHIGS

DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
PHIGSLIB =  -lphigs

LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
XBSDLIB =  -lXbsd

LINTXBSD = $(LINTLIBDIR)/llib-lXbsd.ln

           ICESRC = $(LIBSRC)/ICE

SOICEREV = 6.3
DEPICELIB =
ICELIB =  -lICE

LINTICE = $(LINTLIBDIR)/llib-lICE.ln

            SMSRC = $(LIBSRC)/SM

SOSMREV = 6.0
DEPSMLIB =
SMLIB =  -lSM

LINTSM = $(LINTLIBDIR)/llib-lSM.ln

           XKEYSRC = $(LIBSRC)/Xkey

SOXKEYREV = 6.0
DEPXKEYLIB =
XKEYLIB =  -lXkey

LINTXKEY = $(LINTLIBDIR)/llib-lXkey.ln

         FSLIBSRC = $(LIBSRC)/FS

DEPFSLIB = $(USRLIBDIR)/libFS.a
FSLIB =  -lFS

LINTFS = $(LINTLIBDIR)/llib-lFS.ln

         FONTLIBSRC = $(LIBSRC)/font

DEPFONTLIB = $(USRLIBDIR)/libfont.a
FONTLIB =  -lfont

LINTFONT = $(LINTLIBDIR)/llib-lfont.ln

    XKBFILELIBSRC = $(LIBSRC)/xkbfile

DEPXKBFILELIB = $(USRLIBDIR)/libxkbfile.a
XKBFILELIB =  -lxkbfile

LINTXKBFILE = $(LINTLIBDIR)/llib-lxkbfile.ln

     XKBCOMPCMD = $(BINDIR)/xkbcomp

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)
         DEPLIBS4 = $(DEPLIBS)
         DEPLIBS5 = $(DEPLIBS)
         DEPLIBS6 = $(DEPLIBS)
         DEPLIBS7 = $(DEPLIBS)
         DEPLIBS8 = $(DEPLIBS)
         DEPLIBS9 = $(DEPLIBS)
         DEPLIBS10 = $(DEPLIBS)

	      MTOP = $(TOP)
TOP_MOTIF_INCLUDES = -I$(MINCLUDESRC) ${WCHARDEFS} ${LANGINFO_DEFS}

      UIL_INCLUDES = -I$(USRINCDIR)/uil

    MOTIFENVLIBDIR = $(USRLIBDIR)

      USRINCDIR = /usr/include
         UIDDIR = $(LIBDIR)/uid
        TESTSRC = $(MTOP)/tests
        TESTLIB = $(TESTSRC)/lib
  GENERALSRCLIB = $(TESTSRC)/General/lib
  GENERALSRCBIN = $(TESTSRC)/General/bin
   MANUALSRCLIB = $(TESTSRC)/Manual/lib
   MANUALSRCBIN = $(TESTSRC)/Manual/bin
     AUTOSRCLIB = $(TESTSRC)/Auto/lib
     AUTOSRCBIN = $(TESTSRC)/Auto/bin
       COMMONPP = $(GENERALSRCBIN)/Commonpp
         GENRUN = $(GENERALSRCBIN)/Genrun
         MANRUN = $(GENERALSRCBIN)/Manrun

     TESTCOMSRC = $(MANUALSRCLIB)/Common

    BUILDDOCDIR = $(BUILDINCROOT)/doc
    BUILDLOCDIR = $(BUILDINCROOT)/localized

    MTOOLKITSRC = $(TOOLKITSRC)

    MINCLUDESRC = $(MTOP)/include
        MDOCSRC = $(MTOP)/doc
        MLOCSRC = $(MTOP)/localized

        MLIBSRC = $(MTOP)/lib
     MCLIENTSRC = $(MTOP)/clients
       MDEMOSRC = $(MTOP)/demos
     MWIDGETSRC = $(MLIBSRC)/Xm
   MRESOURCESRC = $(MLIBSRC)/Mrm
         UILSRC = $(MCLIENTSRC)/uil

            UIL = uil
         DEPUIL = $(BINDIR)/uil

   XMEXTRA_LIBS =

SOXMREV = 2.1
DEPXMLIB =
XMLIB =  -lXm

LINTXM = $(LINTLIBDIR)/llib-lXm.ln

SOMRMREV = 2.1
DEPMRESOURCELIB =
MRESOURCELIB =  -lMrm

LINTMRESOURCE = $(LINTLIBDIR)/llib-lMrm.ln

SOUILREV = 2.1
DEPUILLIB =
UILLIB =  -lUil

LINTUIL = $(LINTLIBDIR)/llib-lUil.ln

SOMCOMMONREV = 2.1
DEPTESTCOMLIB =
TESTCOMLIB =  -lMCommon

LINTTESTCOM = $(LINTLIBDIR)/llib-lMCommon.ln

TESTUILCOMLIB = $(TESTCOMSRC)/libMCommonUil.a

  LINTMRESOURCE = $(MRESOURCESRC)/libMrm.a
LINTXMWIDGETLIB = $(MWIDGETSRC)/llib-l/Xm.ln
     LINTXMTOOL = $(MTOOLKITSRC)/llib-lXt.ln
     LINTUILLIB = $(UILSRC)/llib-lUil.ln

      YACCFLAGS =
       UILFLAGS =
    GENCATFLAGS =
         GENCAT = gencat $(GENCATFLAGS)
      MKCATTOOL = $(MLOCSRC)/util/mkcatdefs

         RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  *.Dat

        DEPLIBS = $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXPLIB) $(DEPXLIB)

        DEPLIBS1 = $(DEPLIBS)
        DEPLIBS2 = $(DEPLIBS)
        DEPLIBS3 = $(DEPLIBS)

XMULIBONLY = -lXmu
XMULIB = $(XMULIBONLY) $(XTOOLLIB) $(XLIB)

        CONFIGDIR = $(LIBDIR)/config

    USRLIBDIRPATH = $(USRLIBDIR):$(XPROJECTROOT)/lib
        LDPRELIBS = -L$(USRLIBDIR)  -L$(XPROJECTROOT)/lib
       LDPOSTLIBS =   -L$(XPROJECTROOT)/lib
     TOP_INCLUDES = -I$(INCROOT) $(TOP_MOTIF_INCLUDES) $(TOP_X_INCLUDES)
  PROJECT_DEFINES =   -DNO_MESSAGE_CATALOG ${USERCFLAGS}

CXXPROJECT_DEFINES =   -DNO_MESSAGE_CATALOG ${USERCFLAGS}

# ----------------------------------------------------------------------
# start of Imakefile

#
# Motif
#
# Copyright (c) 1987-2012, The Open Group. All rights reserved.
#
# These libraries and programs are free software; you can
# redistribute them and/or modify them under the terms of the GNU
# Lesser General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# These libraries and programs are distributed in the hope that
# they will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with these librararies and programs; if not, write
# to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
# Floor, Boston, MA 02110-1301 USA
#
#
# HISTORY
#
#   $XConsortium: Imakefile /main/11 1995/07/14 09:55:46 drk $

GEOMETRY_DIR = geometry
INSTANCE_DIR = instances
OTHER_DIR    = other
RESOURCE_DIR = resources
SPECIFIC_DIR = specific
WIDGET_DIR   = widgets

SUBDIRS = $(GEOMETRY_DIR) $(INSTANCE_DIR) $(OTHER_DIR) $(RESOURCE_DIR) 	$(SPECIFIC_DIR) $(WIDGET_DIR)

GEOMETRY_OBJS =	$(GEOMETRY_DIR)/GenObjects.o     		$(GEOMETRY_DIR)/GetGeometry.o     		$(GEOMETRY_DIR)/GetSubObjcts.o

INSTANCE_OBJS =	$(INSTANCE_DIR)/ApplicationS.o 		$(INSTANCE_DIR)/ArrowB.o         	$(INSTANCE_DIR)/ArrowBG.o         	$(INSTANCE_DIR)/BulletinB.o         	$(INSTANCE_DIR)/BulletinBD.o         	$(INSTANCE_DIR)/CascadeB.o         	$(INSTANCE_DIR)/CascadeBG.o         	$(INSTANCE_DIR)/ComboBox.o         	$(INSTANCE_DIR)/Command.o 		$(INSTANCE_DIR)/Container.o         	$(INSTANCE_DIR)/DialogS.o         	$(INSTANCE_DIR)/DrawingA.o         	$(INSTANCE_DIR)/DrawnB.o         	$(INSTANCE_DIR)/DrpDnCmBx.o         	$(INSTANCE_DIR)/DrpDnLstCmBx.o         	$(INSTANCE_DIR)/ErrorD.o         	$(INSTANCE_DIR)/FileSB.o         	$(INSTANCE_DIR)/FileSD.o         	$(INSTANCE_DIR)/Form.o         	$(INSTANCE_DIR)/FormD.o         	$(INSTANCE_DIR)/Frame.o         	$(INSTANCE_DIR)/IconGadget.o         	$(INSTANCE_DIR)/InfoD.o         	$(INSTANCE_DIR)/Label.o         	$(INSTANCE_DIR)/LabelG.o         	$(INSTANCE_DIR)/List.o         	$(INSTANCE_DIR)/MainW.o         	$(INSTANCE_DIR)/MenuB.o         	$(INSTANCE_DIR)/MenuS.o         	$(INSTANCE_DIR)/MessageB.o         	$(INSTANCE_DIR)/MessageD.o         	$(INSTANCE_DIR)/Notebook.o         	$(INSTANCE_DIR)/OptionM.o         	$(INSTANCE_DIR)/PanedW.o         	$(INSTANCE_DIR)/PopupM.o         	$(INSTANCE_DIR)/PopupS.o         	$(INSTANCE_DIR)/PromptD.o         	$(INSTANCE_DIR)/PulldownM.o         	$(INSTANCE_DIR)/PushB.o         	$(INSTANCE_DIR)/PushBG.o         	$(INSTANCE_DIR)/QuestionD.o         	$(INSTANCE_DIR)/RadioB.o         	$(INSTANCE_DIR)/RowC.o         	$(INSTANCE_DIR)/Sash.o         	$(INSTANCE_DIR)/Scale.o         	$(INSTANCE_DIR)/ScrollB.o         	$(INSTANCE_DIR)/ScrolledL.o         	$(INSTANCE_DIR)/ScrolledT.o         	$(INSTANCE_DIR)/ScrolledW.o         	$(INSTANCE_DIR)/SelectionB.o         	$(INSTANCE_DIR)/SelectionD.o         	$(INSTANCE_DIR)/Separator.o         	$(INSTANCE_DIR)/SeparatorG.o         	$(INSTANCE_DIR)/SpinBox.o         	$(INSTANCE_DIR)/TemplateD.o         	$(INSTANCE_DIR)/TearOffButton.o         	$(INSTANCE_DIR)/Text.o         	$(INSTANCE_DIR)/TextF.o         	$(INSTANCE_DIR)/ToggleB.o         	$(INSTANCE_DIR)/ToggleBG.o         	$(INSTANCE_DIR)/WarningD.o         	$(INSTANCE_DIR)/WorkA.o         	$(INSTANCE_DIR)/WorkingD.o

OTHER_OBJS = 	$(OTHER_DIR)/AlwaysTrue.o     		$(OTHER_DIR)/ExtractStrng.o     		$(OTHER_DIR)/FindString.o     		$(OTHER_DIR)/GetClassCode.o     		$(OTHER_DIR)/GetClassName.o     		$(OTHER_DIR)/GetObjName.o     		$(OTHER_DIR)/InitRootInfo.o     		$(OTHER_DIR)/IsParent.o     		$(OTHER_DIR)/IsWidgMapped.o     		$(OTHER_DIR)/SetFocus.o     		$(OTHER_DIR)/WindowToWidg.o     		$(OTHER_DIR)/WinToWidgInf.o     		$(OTHER_DIR)/WidToWidgInf.o     		$(OTHER_DIR)/msg.o     		$(OTHER_DIR)/mvsAssertion.o     		$(OTHER_DIR)/mvsGetRsnNam.o

RESOURCE_OBJS = $(RESOURCE_DIR)/mvsConToType.o     		$(RESOURCE_DIR)/mvsCpRep1Arg.o     		$(RESOURCE_DIR)/mvsCpRepArgs.o     		$(RESOURCE_DIR)/mvsCpRsc.o     		$(RESOURCE_DIR)/mvsFreeRsc.o     		$(RESOURCE_DIR)/mvsFreeRscs.o     		$(RESOURCE_DIR)/mvsGetLcRsc.o     		$(RESOURCE_DIR)/mvsGetRscNum.o     		$(RESOURCE_DIR)/mvsGetRscVal.o     		$(RESOURCE_DIR)/mvsIntRes.o     		$(RESOURCE_DIR)/mvsLoadRscs.o     		$(RESOURCE_DIR)/mvsRscVToStr.o     		$(RESOURCE_DIR)/mvsSetLocCon.o     		$(RESOURCE_DIR)/mvsSetLocVal.o     		$(RESOURCE_DIR)/mvsSetRscDef.o     		$(RESOURCE_DIR)/mvsSetUpGlob.o     		$(RESOURCE_DIR)/mvsSetValues.o     		$(RESOURCE_DIR)/mvsSetValNCk.o     		$(RESOURCE_DIR)/mvsUtils.o

SPECIFIC_OBJS = $(SPECIFIC_DIR)/CreateShell.o

WIDGET_OBJS = 	$(WIDGET_DIR)/AllocWidInfo.o     		$(WIDGET_DIR)/CreatChildrn.o     		$(WIDGET_DIR)/FreeWidInfo.o     		$(WIDGET_DIR)/MapClass.o     		$(WIDGET_DIR)/SetupWidInfo.o     		$(WIDGET_DIR)/mvsCreateWid.o     		$(WIDGET_DIR)/mvsDstroyWid.o

GEOMETRY_SRCS =	$(GEOMETRY_DIR)/GenObjects.c     		$(GEOMETRY_DIR)/GetGeometry.c     		$(GEOMETRY_DIR)/GetSubObjcts.c

INSTANCE_SRCS =	$(INSTANCE_DIR)/ApplicationS.c 		$(INSTANCE_DIR)/ArrowB.c         	$(INSTANCE_DIR)/ArrowBG.c         	$(INSTANCE_DIR)/BulletinB.c         	$(INSTANCE_DIR)/BulletinBD.c         	$(INSTANCE_DIR)/CascadeB.c         	$(INSTANCE_DIR)/CascadeBG.c         	$(INSTANCE_DIR)/ComboBox.c         	$(INSTANCE_DIR)/Command.c         	$(INSTANCE_DIR)/Container.c         	$(INSTANCE_DIR)/DialogS.c         	$(INSTANCE_DIR)/DrawingA.c         	$(INSTANCE_DIR)/DrawnB.c         	$(INSTANCE_DIR)/DrpDnCmBx.c         	$(INSTANCE_DIR)/DrpDnLstCmBx.c         	$(INSTANCE_DIR)/ErrorD.c         	$(INSTANCE_DIR)/FileSB.c         	$(INSTANCE_DIR)/FileSD.c         	$(INSTANCE_DIR)/Form.c         	$(INSTANCE_DIR)/FormD.c         	$(INSTANCE_DIR)/Frame.c         	$(INSTANCE_DIR)/IconGadget.c         	$(INSTANCE_DIR)/InfoD.c         	$(INSTANCE_DIR)/Label.c         	$(INSTANCE_DIR)/LabelG.c         	$(INSTANCE_DIR)/List.c         	$(INSTANCE_DIR)/MainW.c         	$(INSTANCE_DIR)/MenuB.c         	$(INSTANCE_DIR)/MenuS.c         	$(INSTANCE_DIR)/MessageB.c         	$(INSTANCE_DIR)/MessageD.c         	$(INSTANCE_DIR)/Notebook.c         	$(INSTANCE_DIR)/OptionM.c         	$(INSTANCE_DIR)/PanedW.c         	$(INSTANCE_DIR)/PopupM.c         	$(INSTANCE_DIR)/PopupS.c         	$(INSTANCE_DIR)/PromptD.c         	$(INSTANCE_DIR)/PulldownM.c         	$(INSTANCE_DIR)/PushB.c         	$(INSTANCE_DIR)/PushBG.c         	$(INSTANCE_DIR)/QuestionD.c         	$(INSTANCE_DIR)/RadioB.c         	$(INSTANCE_DIR)/RowC.c         	$(INSTANCE_DIR)/Sash.c         	$(INSTANCE_DIR)/Scale.c         	$(INSTANCE_DIR)/ScrollB.c         	$(INSTANCE_DIR)/ScrolledL.c         	$(INSTANCE_DIR)/ScrolledT.c         	$(INSTANCE_DIR)/ScrolledW.c         	$(INSTANCE_DIR)/SelectionB.c         	$(INSTANCE_DIR)/SelectionD.c         	$(INSTANCE_DIR)/Separator.c         	$(INSTANCE_DIR)/SeparatorG.c         	$(INSTANCE_DIR)/SpinBox.c         	$(INSTANCE_DIR)/TemplateD.c         	$(INSTANCE_DIR)/TearOffButton.c         	$(INSTANCE_DIR)/Text.c         	$(INSTANCE_DIR)/TextF.c         	$(INSTANCE_DIR)/ToggleB.c         	$(INSTANCE_DIR)/ToggleBG.c         	$(INSTANCE_DIR)/WarningD.c         	$(INSTANCE_DIR)/WorkingD.c

OTHER_SRCS = 	$(OTHER_DIR)/AlwaysTrue.c     		$(OTHER_DIR)/ExtractStrng.c     		$(OTHER_DIR)/FindString.c     		$(OTHER_DIR)/GetClassCode.c     		$(OTHER_DIR)/GetClassName.c     		$(OTHER_DIR)/GetObjName.c     		$(OTHER_DIR)/InitRootInfo.c     		$(OTHER_DIR)/IsParent.c     		$(OTHER_DIR)/IsWidgMapped.c     		$(OTHER_DIR)/SetFocus.c     		$(OTHER_DIR)/WindowToWidg.c     		$(OTHER_DIR)/WinToWidgInf.c     		$(OTHER_DIR)/WidToWidgInf.c     		$(OTHER_DIR)/msg.c     		$(OTHER_DIR)/mvsAssertion.c     		$(OTHER_DIR)/mvsGetRsnNam.c

RESOURCE_SRCS = $(RESOURCE_DIR)/mvsConToType.c     		$(RESOURCE_DIR)/mvsCpRep1Arg.c     		$(RESOURCE_DIR)/mvsCpRepArgs.c     		$(RESOURCE_DIR)/mvsCpRsc.c     		$(RESOURCE_DIR)/mvsFreeRsc.c     		$(RESOURCE_DIR)/mvsFreeRscs.c     		$(RESOURCE_DIR)/mvsGetLcRsc.c     		$(RESOURCE_DIR)/mvsGetRscNum.c     		$(RESOURCE_DIR)/mvsGetRscVal.c     		$(RESOURCE_DIR)/mvsIntRes.c     		$(RESOURCE_DIR)/mvsLoadRscs.c     		$(RESOURCE_DIR)/mvsRscVToStr.c     		$(RESOURCE_DIR)/mvsSetLocCon.c     		$(RESOURCE_DIR)/mvsSetLocVal.c     		$(RESOURCE_DIR)/mvsSetRscDef.c     		$(RESOURCE_DIR)/mvsSetUpGlob.c     		$(RESOURCE_DIR)/mvsSetValues.c     		$(RESOURCE_DIR)/mvsSetValNCk.c     		$(RESOURCE_DIR)/mvsUtils.c

SPECIFIC_SRCS = $(SPECIFIC_DIR)/CreateShell.c

WIDGET_SRCS = 	$(WIDGET_DIR)/AllocWidInfo.c     		$(WIDGET_DIR)/CreatChildrn.c     		$(WIDGET_DIR)/FreeWidInfo.c     		$(WIDGET_DIR)/MapClass.c     		$(WIDGET_DIR)/SetupWidInfo.c     		$(WIDGET_DIR)/mvsCreateWid.c     		$(WIDGET_DIR)/mvsDstroyWid.c

OBJS = 	$(CALLBACK_OBJS) 	$(GEOMETRY_OBJS) 	$(INSTANCE_OBJS) 	$(OTHER_OBJS) 		$(RESOURCE_OBJS) 	$(SPECIFIC_OBJS) 	$(WIDGET_OBJS)

SRCS = 	$(CALLBACK_SRCS) 	$(GEOMETRY_SRCS) 	$(INSTANCE_SRCS) 	$(OTHER_SRCS) 		$(RESOURCE_SRCS) 	$(SPECIFIC_SRCS) 	$(WIDGET_SRCS)

# $TOG: Library.tmpl /main/44 1997/04/28 11:47:53 kaleb $

         CC = gcc
  CCOPTIONS = -ansi
STD_DEFINES = -Dlinux -D__amd64__ -D_POSIX_C_SOURCE=199309L 				-D_POSIX_SOURCE 				-D_DEFAULT_SOURCE $(PROJECT_DEFINES)
CDEBUGFLAGS = -O

LIB_MT_DEFINES = LibraryMTDefines

LIBNAME = Create

all::
	$(_NULLCMD_)
	$(_NULLCMD_)
	@if [ -d unshared ]; then \
	    exit 0; \
	else \
	    echo "mkdir unshared"; mkdir unshared; \
	    for i in $(SUBDIRS); do \
	      j=`echo "$$i" | sed -e 's;[^/]\{1,\};..;g'`; \
	      $(MKDIRHIER) "unshared/`dirname $$i`"; \
	      echo $(LN) "$$j/$$i/unshared" "unshared/$$i"; \
	      $(LN) "$$j/$$i/unshared" "unshared/$$i"; \
	    done; \
	fi

includes::
	$(_NULLCMD_)
	$(_NULLCMD_)
	@if [ -d unshared ]; then \
	    exit 0; \
	else \
	    echo "mkdir unshared"; mkdir unshared; \
	    for i in $(SUBDIRS); do \
	      j=`echo "$$i" | sed -e 's;[^/]\{1,\};..;g'`; \
	      $(MKDIRHIER) "unshared/`dirname $$i`"; \
	      echo $(LN) "$$j/$$i/unshared" "unshared/$$i"; \
	      $(LN) "$$j/$$i/unshared" "unshared/$$i"; \
	    done; \
	fi

.c.o:
	$(_NULLCMD_)
	$(_NULLCMD_)
	$(RM) $@ unshared/$@
	 	$(CC) -c $(CCOPTIONS) $(ALLDEFINES) $(CDEBUGFLAGS) $(_NOOP_) $*.c
	$(MV) $@ unshared/$@
	$(RM) $@
	 	$(CC) -c $(CFLAGS) $(_NOOP_) $(SHLIBDEF) $(SHAREDCODEDEF) $(PICFLAGS) $*.c

clean::
	$(_NULLCMD_)
	$(_NULLCMD_)
	-@if [ -d unshared ]; then \
		set -x; $(RM) -r unshared; else exit 0; fi

all:: lib$(LIBNAME).so.$(SOCREATEREV)

lib$(LIBNAME).so.$(SOCREATEREV):  $(OBJS) $(EXTRALIBRARYDEPS)
	$(RM) $@~
	(cd .; T=`echo $@ | sed 's/\.[^\.]*$$//'`; 		$(CC) -o ./$@~ $(SHLIBLDFLAGS) -Wl,-soname,$$T $(OBJS) $(REQUIREDLIBS); 		$(RM) $$T && $(LN) $@ $$T)
	$(RM) $@
	$(MV) $@~ $@
	$(RM) lib$(LIBNAME).so
	$(LN) $@ lib$(LIBNAME).so
	$(_NULLCMD_)
	$(_NULLCMD_)
	(T=`echo $@ | sed 's/\.[^\.]*$$//'`; 		$(RM) $(BUILDLIBDIR)/$$T; cd $(BUILDLIBDIR); $(LN) $(BUILDLIBTOP)/$(CURRENT_DIR)/$$T .)

clean::
	$(RM) lib$(LIBNAME).so.$(SOCREATEREV) lib$(LIBNAME).so

install:: lib$(LIBNAME).so.$(SOCREATEREV)
	@if [ -d $(DESTDIR)$(SHLIBDIR) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(SHLIBDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTBINFLAGS) lib$(LIBNAME).so.$(SOCREATEREV) $(DESTDIR)$(SHLIBDIR)
	(T=`echo $(DESTDIR)$(SHLIBDIR)/lib$(LIBNAME).so.$(SOCREATEREV) | sed 's/\.[^\.]*$$//'`;		$(RM) $$T && $(LN) lib$(LIBNAME).so.$(SOCREATEREV) $$T)
	$(RM) $(DESTDIR)$(SHLIBDIR)/lib$(LIBNAME).so
	$(LN) lib$(LIBNAME).so.$(SOCREATEREV) $(DESTDIR)$(SHLIBDIR)/lib$(LIBNAME).so

all:: lib$(LIBNAME).a

lib$(LIBNAME).a: $(OBJS) $(EXTRALIBRARYDEPS)
	$(RM) $@
	(cd unshared && $(AR) ../$@ $(OBJS))
	$(RANLIB) $@
	$(_NULLCMD_)

install:: lib$(LIBNAME).a
	@if [ -d $(DESTDIR)$(USRLIBDIR) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(USRLIBDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTLIBFLAGS) lib$(LIBNAME).a $(DESTDIR)$(USRLIBDIR)
	$(RANLIB) $(RANLIBINSTFLAGS) $(DESTDIR)$(USRLIBDIR)/lib$(LIBNAME).a

lintlib:: llib-l$(LIBNAME).ln

llib-l$(LIBNAME).ln: $(SRCS) $(EXTRALIBRARYDEPS)
	$(RM) $@
	$(LINT) $(LINTLIBFLAG)$(LIBNAME) $(LINTFLAGS) $(SRCS)

install.ln:: llib-l$(LIBNAME).ln
	@if [ -d $(DESTDIR)$(LINTLIBDIR) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(LINTLIBDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTLIBFLAGS) llib-l$(LIBNAME).ln $(DESTDIR)$(LINTLIBDIR)/llib-l$(LIBNAME).ln

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

SOSYMLINK = true

.c.o:
	$(_NULLCMD_)

$(OBJS):: $(SUBDIRS)

$(SUBDIRS): FRC
	@cd $@ ; echo "making all in $(CURRENT_DIR)/$@..."; \
	$(MAKE) $(MFLAGS) 'CDEBUGFLAGS=$(CDEBUGFLAGS)' all

FRC:

depend::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "depending" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i &&  $(MAKE) $(MFLAGS)  depend); \
	done

# ----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	 	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::

# ----------------------------------------------------------------------
# rules for building in SUBDIRS - do not edit

install::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "installing" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i &&  $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install); \
	done

install.man::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "installing man pages" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i &&  $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install.man); \
	done

install.linkkit::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "installing link kit" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i &&  $(MAKE) $(MFLAGS) DESTDIR='$(DESTDIR)' install.linkkit); \
	done

clean::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i &&  $(MAKE) $(MFLAGS)  clean); \
	done

tags::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "tagging" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i &&  $(MAKE) $(MFLAGS) TAGS='$(TAGS)' tags); \
	done

$(ONESUBDIR)/Makefile:
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[n]*) executeit="no";; esac; done; \
	cd $(ONESUBDIR); \
	if [ "$$executeit" != "no" ]; then \
		$(IMAKE_CMD) -DTOPDIR=$(IMAKETOP) $(USER_IMAKE_DEFINES) -DCURDIR=$(ONECURDIR)$(ONESUBDIR); \
	fi;

Makefiles::
	-@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[n]*) executeit="no";; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		case "$(CURRENT_DIR)" in \
		.) curdir= ;; \
		*) curdir=$(CURRENT_DIR)/ ;; \
		esac; \
		echo "making Makefiles in $$curdir$$i..."; \
		itmp=`echo $$i | sed -e 's;^\./;;g' -e 's;/\./;/;g'`; \
		curtmp="$(CURRENT_DIR)" \
		toptmp=""; \
		case "$$itmp" in \
		    ../?*) \
			while echo "$$itmp" | grep '^\.\./' > /dev/null;\
			  do \
			     toptmp="/`basename $$curtmp`$$toptmp"; \
			     curtmp="`dirname $$curtmp`"; \
			     itmp="`echo $$itmp | sed 's;\.\./;;'`"; \
			  done \
		    ;; \
		esac; \
		case "$$itmp" in \
		*/?*/?*/?*/?*)	newtop=../../../../..;; \
		*/?*/?*/?*)	newtop=../../../..;; \
		*/?*/?*)	newtop=../../..;; \
		*/?*)		newtop=../..;; \
		*)		newtop=..;; \
		esac; \
		newtop="$$newtop$$toptmp"; \
		case "$(TOP)" in \
		/?*) imaketop=$(TOP) \
		     imakeprefix= ;; \
		.) imaketop=$$newtop \
		   imakeprefix=$$newtop/ ;; \
		*) imaketop=$$newtop/$(TOP) \
		   imakeprefix=$$newtop/ ;; \
		esac; \
		$(RM) $$i/Makefile.bak; \
		if [ -f $$i/Makefile ]; then \
			echo "	$(MV) Makefile Makefile.bak"; \
			if [ "$$executeit" != "no" ]; then \
				$(MV) $$i/Makefile $$i/Makefile.bak; \
			fi; \
		fi; \
		$(MAKE) $(MFLAGS) $(MAKE_OPTS) ONESUBDIR=$$i ONECURDIR=$$curdir IMAKETOP=$$imaketop IMAKEPREFIX=$$imakeprefix $$i/Makefile; \
		cd $$i;	\
		$(MAKE) $(MFLAGS) Makefiles; \
		cd $$newtop; \
	done

includes::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo including "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i &&  $(MAKE) $(MFLAGS)  includes); \
	done

# ----------------------------------------------------------------------
# dependencies generated by makedepend
