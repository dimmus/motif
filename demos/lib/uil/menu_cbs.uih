! Motif
!
! Copyright (c) 1987-2012, The Open Group. All rights reserved.
!
! These libraries and programs are free software; you can
! redistribute them and/or modify them under the terms of the GNU
! Lesser General Public License as published by the Free Software
! Foundation; either version 2 of the License, or (at your option)
! any later version.
!
! These libraries and programs are distributed in the hope that
! they will be useful, but WITHOUT ANY WARRANTY; without even the
! implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
! PURPOSE. See the GNU Lesser General Public License for more
! details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with these librararies and programs; if not, write
! to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
! Floor, Boston, MA 02110-1301 USA
!
!
! HISTORY

procedure
    NewCB();
    OpenCB();
    SaveCB();
    SaveAsCB();
    CopyToCB();
    MoveToCB();
    RemoveCB();
    PrintCB();
    PrintSetupCB();
    CloseCB();
    ExitCB();
    UndoCB();
    RepeatRedoCB();
    DragMoveCB();
    CutCB();
    CopyCB();
    PasteCB();
    ClearCB();
    DeleteCB();
    SelectAllCB();
    DeselectAllCB();
    ChangeViewCB();
    NewWindowCB();
    OverviewCB();
    TocCB();
    TasksCB();
    ReferenceCB();
    OnItemCB();
    UsingHelpCB();
    AboutCB();

list
	new_cbs : callbacks {
  	      XmNactivateCallback = procedure NewCB();
  	};

	open_cbs : callbacks {
  	      XmNactivateCallback = procedure OpenCB();
  	};

	save_cbs : callbacks {
  	      XmNactivateCallback = procedure SaveCB();
  	};

	saveAs_cbs : callbacks {
  	      XmNactivateCallback = procedure SaveAsCB();
  	};

	revert_cbs : callbacks {
  	};

	copyTo_cbs : callbacks {
  	      XmNactivateCallback = procedure CopyToCB();
  	};

	moveTo_cbs : callbacks {
	        XmNactivateCallback = procedure MoveToCB();
  	};

	linkTo_cbs : callbacks {
  	};

	drag_cbs : callbacks {
  	};

	print_cbs : callbacks {
  	      XmNactivateCallback = procedure PrintCB();
  	};

	printSetup_cbs : callbacks {
  	      XmNactivateCallback = procedure PrintSetupCB();
  	};

	close_cbs : callbacks {
  	      XmNactivateCallback = procedure CloseCB();
  	};

	exit_cbs : callbacks {
  	      XmNactivateCallback = procedure ExitCB();
  	};

	undo_cbs : callbacks {
  	      XmNactivateCallback = procedure UndoCB();
  	};

	repeatRedo_cbs : callbacks {
  	      XmNactivateCallback = procedure RepeatRedoCB();
  	};

	dragMove_cbs : callbacks {
  	      XmNactivateCallback = procedure DragMoveCB();
  	};

	size_cbs : callbacks {
  	};

	duplicate_cbs : callbacks {
  	};

	cut_cbs : callbacks {
  	      XmNactivateCallback = procedure CutCB();
  	};

	copy_cbs : callbacks {
  	      XmNactivateCallback = procedure CopyCB();
  	};

	copyLink_cbs : callbacks {
	};

	copySpecial_cbs : callbacks {
	};

	paste_cbs : callbacks {
  	      XmNactivateCallback = procedure PasteCB();
  	};

	pasteLink_cbs : callbacks {
	};

	pasteSpecial_cbs : callbacks {
	};

	insert_cbs : callbacks {
	};

	primaryCopy_cbs : callbacks {
	};

	primaryMove_cbs : callbacks {
	};

	primaryLink_cbs : callbacks {
	};

	clear_cbs : callbacks {
  	      XmNactivateCallback = procedure ClearCB();
  	};

	delete_cbs : callbacks {
  	      XmNactivateCallback = procedure DeleteCB();
  	};

	selectAll_cbs : callbacks {
  	      XmNactivateCallback = procedure SelectAllCB();
  	};

	deselectAll_cbs : callbacks {
  	      XmNactivateCallback = procedure DeselectAllCB();
  	};

	selectPasted_cbs : callbacks {
	};

	reselect_cbs : callbacks {
	};

	changeView_cbs : callbacks {
  	      XmNactivateCallback = procedure ChangeViewCB();
  	};
	newWindow_cbs : callbacks {
  	      XmNactivateCallback = procedure NewWindowCB();
  	};

	include_cbs : callbacks {
	};

	sort_cbs : callbacks {
	};

	find_cbs : callbacks {
	};

	overview_cbs : callbacks {
  	      XmNactivateCallback = procedure OverviewCB();
  	};

	index_cbs : callbacks {
	};

	toc_cbs : callbacks {
  	      XmNactivateCallback = procedure TocCB();
  	};
	tasks_cbs : callbacks {
  	      XmNactivateCallback = procedure TasksCB();
  	};
	reference_cbs : callbacks {
  	      XmNactivateCallback = procedure ReferenceCB();
  	};

	tutorial_cbs : callbacks {
	};

	keyboard_cbs : callbacks {
	};

	mouse_cbs : callbacks {
	};

	onItem_cbs : callbacks {
  	      XmNactivateCallback = procedure OnItemCB();
  	};
	usingHelp_cbs : callbacks {
  	      XmNactivateCallback = procedure UsingHelpCB();
  	};
	about_cbs : callbacks {
  	      XmNactivateCallback = procedure AboutCB();
  	};
