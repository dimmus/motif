diff --git a/ChangeLog b/ChangeLog
index 76700eb..70b56cc 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,14 @@
+2007-11-24  Yuriy Syrota  <yura@ics.com>
+	* lib/Xm/List.c:
+	Fixed bug #1210 (XmList XBell call when matchBehavior is XmQUICK_NAVIGATE).
+
 2007-11-08  Yuriy Syrota  <yura@ics.com>
 	* lib/Xm/BaseClass.c:
 	Fixed bug #1392 (The label widgets can have their core class translations changed).
 
 2007-11-01  Yuriy Syrota  <yura@ics.com>
 	* doc/man/man3/XmObject.3, doc/man/man3/XmShell.3, doc/man/man3/Makefile.am:
-	Implemented enhancement (There's no good way to see the man-page for Shell widget).
+	Implemented enhancement #1292 (There's no good way to see the man-page for Shell widget).
 
 2007-11-01  Yuriy Syrota  <yura@ics.com>
 	* lib/Xm/PushB.c, lib/Xm/PushBG.c, lib/Xm/XmI.h:
diff --git a/lib/Xm/List.c b/lib/Xm/List.c
index f2ee74b..9763240 100644
--- a/lib/Xm/List.c
+++ b/lib/Xm/List.c
@@ -75,6 +75,7 @@ static char rcsid[] = "$TOG: List.c /main/47 1999/10/12 16:58:17 mgreess $"
 #include "ToolTipI.h"
 
 #define FIX_1390	1
+#define FIX_1210	1
 
 #define	BUTTONDOWN	1
 #define	SHIFTDOWN	2
@@ -7432,36 +7433,47 @@ ListQuickNavigate(Widget wid,
   /* If there is more data than we can handle, bail out. */
   if (((status_return == XLookupChars) || (status_return == XLookupBoth)) &&
       (input_length > 0))
-    {
+  {
       if (lw->list.itemCount > 0)
-	{
-	  /* Convert input to a wchar_t for easy comparison. */
-	  (void) mbtowc(&input_char, NULL, 0);
-	  (void) mbtowc(&input_char, input_string, input_length);
+	  {
+	    /* Convert input to a wchar_t for easy comparison. */
+	    (void) mbtowc(&input_char, NULL, 0);
+	    (void) mbtowc(&input_char, input_string, input_length);
 
-	  /* Search forward from the current position. */
-	  for (i = lw->list.CurrentKbdItem + 1; i < lw->list.itemCount; i++)
-	    if (CompareCharAndItem(lw, input_char, i))
+#ifdef FIX_1210	  
+	    if (iswprint(input_char))
+	    {
+#endif
+	      /* Search forward from the current position. */
+	      for (i = lw->list.CurrentKbdItem + 1; i < lw->list.itemCount; i++)
+		  if (CompareCharAndItem(lw, input_char, i))
 	      {
-		found = True;
-		break;
+		      found = True;
+		      break;
 	      }
 
-	  /* Wrap around to the start of the list if necessary. */
-	  if (!found)
-	    {
-	      for (i = 0; i <= lw->list.CurrentKbdItem; i++)
-		if (CompareCharAndItem(lw, input_char, i))
+	      /* Wrap around to the start of the list if necessary. */
+	      if (!found)
 		  {
-		    found = True;
-		    break;
+		    for (i = 0; i <= lw->list.CurrentKbdItem; i++)
+		    if (CompareCharAndItem(lw, input_char, i))
+		    {
+			    found = True;
+			    break;
+		    }
 		  }
+#ifdef FIX_1210
 	    }
-	}
+#endif
+	  }
 
-      if (!found)
-	XBell(XtDisplay(wid), 0);
-    }
+      if (!found
+#ifdef FIX_1210
+          && iswprint(input_char)
+#endif
+         )
+	    XBell(XtDisplay(wid), 0);
+  }
 }
 
 /***************************************************************************
